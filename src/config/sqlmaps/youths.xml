<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="youths">
	<typeAlias alias="Youths" type="com.tianque.baseInfo.youths.domain.Youths" />
	<typeAlias alias="SearchYouthsVo" type="com.tianque.baseInfo.youths.vo.SearchYouthsVo" />
	<resultMap class="Youths" id="youthsResult">
		<result column="id" property="id"  nullValue="0"/>
		<result column="gender" property="gender.id" />
		<result column="idCardNo" property="idCardNo" />
		<result column="name" property="name" />
		<result column="usedName" property="usedName"/>
		<result column="fullPinyin" property="fullPinyin" />
		<result column="simplePinyin" property="simplePinyin" />
		<result column="telephone" property="telephone" />
		<result column="mobileNumber" property="mobileNumber" />
		<result column="province" property="province" />
		<result column="city" property="city" />
		<result column="district" property="district" />
		<result column="nativePlaceAddress" property="nativePlaceAddress" />
		<result column="birthday" property="birthday" />
		<result column="workUnit" property="workUnit" />
		<result column="createDate" property="createDate" />
		<result column="createUser" property="createUser" />
		<result column="updateDate" property="updateDate" />
		<result column="updateUser" property="updateUser" />
		<result column="isDeath" property="isDeath" nullValue="false"/>
		<result column="nation" property="nation.id" />
		<result column="politicalBackground" property="politicalBackground.id" />
		<result column="schooling" property="schooling.id" />
		<result column="career" property="career.id" />
		<result column="maritalState" property="maritalState.id" />
		<result column="bloodType" property="bloodType.id" />
		<result column="faith" property="faith.id" />
		<result column="stature" property="stature" />
		<result column="imgUrl" property="imgUrl" />
		<result column="email" property="email" />
		<result column="isHaveHouse" property="isHaveHouse"/>
		<result column="noHouseReason" property="noHouseReason"/>
		<result column="currentAddress" property="currentAddress" />
		<result column="otherAddress" property="otherAddress" />
		<result column="remark" property="remark" />
		<result column="orgId" property="organization.id" />
		<result column="orgInternalCode" property="orgInternalCode" />
		<result column="actualPopulationType" property="actualPopulationType" />
		<result column="rowNum" property="rowNum"/>	
	</resultMap>
	<sql id="sql_youths">
		uni.id,uni.orgId,uni.orgInternalCode,uni.createUser,uni.createDate,uni.updateUser,uni.updateDate,
		gender,idCardNo,name,fullPinyin,simplePinyin,usedName,birthday,province,city,district,
		nativePlaceAddress,telephone,mobileNumber,career,politicalBackground,maritalState,stature,
		nation,faith,schooling,bloodType,email,workUnit,isDeath,logOut,imgUrl,sourcesState,
    	isHaveHouse,noHouseReason,currentAddress,otherAddress,remark
	</sql>
	
	<sql id="sql_where_condition">
		<dynamic prepend="where">
			<isPropertyAvailable property="fastSearchKeyWords">
				<isNotNull property="fastSearchKeyWords" prepend=" and ">
					(upper(idCardNo) like  upper(#fastSearchKeyWords#)||'%' or name like #fastSearchKeyWords#||'%' or fullPinyin like #fastSearchKeyWords#||'%' or simplePinyin like #fastSearchKeyWords#||'%' )
				</isNotNull>
			</isPropertyAvailable>
			<isPropertyAvailable property="organization">
				<isNotNull property="organization.orgInternalCode" prepend=" and ">
					orgInternalCode like #organization.orgInternalCode#||'%'
				</isNotNull>
			</isPropertyAvailable>
			<isPropertyAvailable property="isDeathUser">
				<isNotNull property="isDeathUser" prepend=" and ">
					<isEqual property="isDeathUser" compareValue="1">
						isDeath = #isDeathUser#
					</isEqual>
					<isEqual property="isDeathUser" compareValue="0">
						(isDeath = #isDeathUser# or isDeath is null)
					</isEqual>
				</isNotNull>
			</isPropertyAvailable>
			<isPropertyAvailable property="logOut">
				<isNotNull property="logOut" prepend=" and ">
					<isEqual property="logOut" compareValue="1">
						logOut = #logOut#
					</isEqual>
					<isEqual property="logOut" compareValue="0">
						(logOut = #logOut# or logOut is null)
					</isEqual>
				</isNotNull>
			</isPropertyAvailable>
			<isPropertyAvailable property="beginAge">
				<isNotNull property="beginAge" prepend=" and ">
					BIRTHDAY is not null and (sysdate - add_months(BIRTHDAY,12*#beginAge#))>=0
				</isNotNull>
			</isPropertyAvailable>
			<isPropertyAvailable property="endAge">
				<isNotNull property="endAge" prepend=" and ">
					0>=(sysdate - add_months(BIRTHDAY,12*#endAge#))
				</isNotNull>
			</isPropertyAvailable>
			 
			<isPropertyAvailable property="politicalBackground">
			 	<isNotNull property="politicalBackground.id" prepend=" and ">
			 		politicalBackground = #politicalBackground.id#
			 	</isNotNull>
			 </isPropertyAvailable>
			<isPropertyAvailable property="idCardNo">
				<isNotEmpty prepend=" and " property="idCardNo">
					upper(idCardNo) like upper(#idCardNo#)||'%'
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="name">
				<isNotEmpty prepend=" and " property="name">
					(name like #name#||'%' or fullPinyin like #name#||'%' or simplePinyin like #name#||'%')
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="gender">
				<isNotNull prepend=" and " property="gender.id">
					gender = #gender.id#
				</isNotNull>
			</isPropertyAvailable>
			<isPropertyAvailable property="usedName">
				<isNotEmpty prepend=" and " property="usedName">
					usedName like #usedName#||'%'
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="telephone">
				<isNotEmpty prepend=" and " property="telephone">
					telephone like #telephone#||'%'
				</isNotEmpty>
			</isPropertyAvailable>	
			<isPropertyAvailable property="mobileNumber" >
				<isNotEmpty prepend=" and " property="mobileNumber">
					 mobileNumber = #mobileNumber#||'%'
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="nation">
				<isNotNull prepend=" and " property="nation.id">
					nation = #nation.id#
				</isNotNull>
			</isPropertyAvailable>
			<isPropertyAvailable property="career">
				<isNotNull prepend=" and " property="career.id">
					career = #career.id#
				</isNotNull>
			</isPropertyAvailable>
			<isPropertyAvailable property="maritalState" >
				<isNotNull prepend=" and " property="maritalState.id">
				    maritalState = #maritalState.id#
				</isNotNull>
			</isPropertyAvailable>
			<isPropertyAvailable property="faith">
				<isNotNull prepend=" and " property="faith.id">
					faith = #faith.id#
				</isNotNull>
			</isPropertyAvailable>
			<isPropertyAvailable property="bloodType">
				<isNotNull prepend=" and " property="bloodType.id">
					bloodType = #bloodType.id#
				</isNotNull>
			</isPropertyAvailable>
			<isPropertyAvailable property="schooling">
				<isNotNull prepend=" and " property="schooling.id">
					schooling = #schooling.id#
				</isNotNull>
			</isPropertyAvailable>
			
			<isPropertyAvailable property="email" >
				<isNotEmpty prepend=" and " property="email">
					email like #email#||'%'
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="province">
				<isNotEmpty prepend=" and " property="province">
					province = #province#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="city">
				<isNotEmpty prepend=" and " property="city">
					city = #city#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="district">
				<isNotEmpty prepend=" and " property="district">
					district = #district#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="currentAddress">
				<isNotEmpty prepend=" and " property="currentAddress">
					currentAddress like '%'||#currentAddress#||'%'
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="nativePlaceAddress">
				<isNotEmpty prepend=" and " property="nativePlaceAddress">
					nativePlaceAddress like '%'||#nativePlaceAddress#||'%'
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="otherAddress">
				<isNotEmpty prepend=" and " property="otherAddress">
					otherAddress like '%'||#otherAddress#||'%'
				</isNotEmpty>
			</isPropertyAvailable>
		</dynamic>
	</sql>
	
	<sql id="house_sql_where">
		from householdStaffs_$shardCode$ uni left join baseinfo b on uni.baseInfoId=b.id <include refid="addressInfo.joinAddressInfo"/> 
		<include refid="sql_where_condition"/>
		<isPropertyAvailable property="residenceType">
			<isNotNull prepend=" and " property="residenceType.id">
				residenceType = #residenceType.id#
			</isNotNull>
		</isPropertyAvailable> 
	</sql>
	
	<sql id="float_sql_where">
		from floatingPopulations uni left join baseinfo b on uni.baseInfoId=b.id <include refid="addressInfo.joinAddressInfo"/> 
		<include refid="sql_where_condition"/>
		<isPropertyAvailable property="residenceType">
			<isNotNull prepend=" and " property="residenceType.id">
				residenceType = #residenceType.id#
			</isNotNull>
		</isPropertyAvailable> 
	</sql>
	
	<sql id="unsettle_sql_where">
		from unsettledPopulations uni 
		<include refid="sql_where_condition"/>
	</sql>
	
	<select id="countYouths" parameterClass="SearchYouthsVo" resultClass="java.lang.Integer">
		<include refid="common.sql_count" />
		 from 
		(
			select uni.id 
			<include refid="house_sql_where"/>
			union all 
			select uni.id 
			<include refid="float_sql_where"/>
			union all 
			select uni.id 
			<include refid="unsettle_sql_where"/>
		 )
	</select>
	
	<select id="countHouse" parameterClass="SearchYouthsVo" resultClass="java.lang.Integer">
		select count(uni.id) <include refid="house_sql_where"/>
	</select>
	<select id="countFloat" parameterClass="SearchYouthsVo" resultClass="java.lang.Integer">
		select count(uni.id) <include refid="float_sql_where"/>
	</select>
	<select id="countUnsettle" parameterClass="SearchYouthsVo" resultClass="java.lang.Integer">
		select count(uni.id) <include refid="unsettle_sql_where"/>
	</select>
	
	<select id="findHouse" parameterClass="SearchYouthsVo" resultMap="youthsResult">
		<include refid="common.sql_page_start"/>
		select 'householdStaff' as actualPopulationType,rowNum,
		<include refid="sql_youths" />
		<include refid="house_sql_where"/>
		<dynamic prepend=" order by ">
			<isPropertyAvailable property="sortField">
				<isNotNull property="sortField">$sortField$</isNotNull>
				<isNotNull property="order">$order$</isNotNull>
			</isPropertyAvailable>
		</dynamic>
		<include refid="common.sql_page_end"/>
	</select>
	<select id="findFloat" parameterClass="SearchYouthsVo" resultMap="youthsResult">
		<include refid="common.sql_page_start"/>
		select 'floatingPopulation' as actualPopulationType,rowNum,
		<include refid="sql_youths" />
		<include refid="float_sql_where"/>
		<dynamic prepend=" order by ">
			<isPropertyAvailable property="sortField">
				<isNotNull property="sortField">$sortField$</isNotNull>
				<isNotNull property="order">$order$</isNotNull>
			</isPropertyAvailable>
		</dynamic>
		<include refid="common.sql_page_end"/>
	</select>
	<select id="findUnsettle" parameterClass="SearchYouthsVo" resultMap="youthsResult">
		<include refid="common.sql_page_start"/>
		select 'unsettledPopulation' as actualPopulationType,rowNum,
		<include refid="sql_youths" />
		<include refid="unsettle_sql_where"/>
		<dynamic prepend=" order by ">
			<isPropertyAvailable property="sortField">
				<isNotNull property="sortField">$sortField$</isNotNull>
				<isNotNull property="order">$order$</isNotNull>
			</isPropertyAvailable>
		</dynamic>
		<include refid="common.sql_page_end"/>
	</select>
	
	
	<select id="findYouths" parameterClass="SearchYouthsVo" resultMap="youthsResult">
		select t.*,rownum from
		(
			select 'householdStaff' as actualPopulationType,
			<include refid="sql_youths" />
			<include refid="house_sql_where"/>
			union all 
			select 'floatingPopulation' as actualPopulationType,
			<include refid="sql_youths" />
			<include refid="float_sql_where"/>
			union all 
			select 'unsettledPopulation' as actualPopulationType,
			<include refid="sql_youths" />
			<include refid="unsettle_sql_where"/>
			<dynamic prepend=" order by ">
				<isPropertyAvailable property="sortField">
					<isNotNull property="sortField">$sortField$</isNotNull>
					<isNotNull property="order">$order$</isNotNull>
				</isPropertyAvailable>
			</dynamic>
		) t
	</select>

</sqlMap>
