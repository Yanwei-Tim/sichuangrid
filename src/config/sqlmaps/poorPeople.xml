<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="poorPeople">

	<typeAlias alias="poorPeople" type="com.tianque.xichang.working.poorPeople.domain.PoorPeople" />
	<typeAlias alias="ReportGroupCount" type="com.tianque.xichang.working.domain.ReportGroupCount" />

	<resultMap class="poorPeople" id="poorPeopleMap">
		<result property="id" column="ID" />
		<result property="organization.id" column="ORGID" />
		<result property="orgInternalCode" column="ORGINTERNALCODE" />
		<result property="name" column="NAME" />
		<result property="idCardNo" column="IDCARDNO" />
		<result property="gender.id" column="GENDER" />
		<result property="birthDay" column="BIRTHDAY" />
		<result property="mobileNumber" column="MOBILENUMBER" />
		<result property="isPartyMember" column="ISPARTYMEMBER" />
		<result property="permanentAddress" column="PERMANENTADDRESS" />
		<result property="position.id" column="POSITION" />
		<result property="serverTelephone" column="SERVERTELEPHONE" />
		<result property="serverContractor" column="SERVERCONTRACTOR" />
		<result property="serverJob" column="SERVERJOB" />
		<result property="serverUnit" column="SERVERUNIT" />
		<result property="serialNumber" column="SERIALNUMBER" />
		<result property="createTableType.id" column="CREATETABLETYPE" />

		<result property="schooling.id" column="SCHOOLING" />
		<result property="insuranceType.id" column="INSURANCETYPE" />
		<result property="memberNum" column="MEMBERNUM" />
		<result property="lastYearMemberIncome" column="LASTYEARMEMBERINCOME" />
		<result property="poorBigInfo.id" column="POORBIGINFO" />
		<result property="poorInfo.id" column="POORINFO" />
		<result property="yearHelpInfo" column="YEARHELPINFO" />
		<result property="helpInfo" column="HELPINFO" />

		<result property="occurOrg.id" column="OCCURORGID" />
		<result property="occurOrgInternalCode" column="OCCURORGINTERNALCODE" />
		<result property="gridNo" column="GRIDNO" />
		<result property="bookingUnit" column="BOOKINGUNIT" />
		<result property="registrant" column="REGISTRANT" />
		<result property="registrationTime" column="REGISTRATIONTIME" />
		<result property="createUser" column="CREATEUSER" />
		<result property="updateUser" column="UPDATEUSER" />
		<result property="createDate" column="CREATEDATE" />
		<result property="updateDate" column="UPDATEDATE" />
	</resultMap>

	<resultMap id="reportGroupCount" class="ReportGroupCount">
		<result property="rowType" column="createtabletype"/>
		<result property="item.id" column="itemcategory"/>
		<result property="count" column="counts"/>
	</resultMap>

	<sql id="sql_findUndoPoorPeopleForList">
		SELECT * FROM POORPEOPLES p where id in 
		(select distinct a.accountid from accountsteps_xichang a
               where  a.isfinish=#isfinish# and a.accounttype='POORPEOPLE'
			<isNotNull  prepend=" and " property="orgId" >
				a.targetorgid = #orgId#
			</isNotNull>
			<isNotEmpty  property="displayLevel" prepend=" and">
				<isEqual property="displayLevel" compareValue="sameGrade">
					 a.targetorgcode = #orgCode# 	
				</isEqual>	
				<isEqual property="displayLevel" compareValue="directJurisdiction">
					 a.targetorgcode like #orgCode#||'__' 	
				</isEqual>	
				<isEqual property="displayLevel" compareValue="allJurisdiction">
					 a.targetorgcode like #orgCode#||'%' 	
				</isEqual>	
			</isNotEmpty>
          )
          <isPropertyAvailable property="occurOrg">
				<isNotEmpty prepend="and" property="occurOrg.id">
					OCCURORGID = #occurOrg.id#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="serialNumber">
				<isNotEmpty property="serialNumber" prepend=" AND ">SERIALNUMBER LIKE #serialNumber#||'%'</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="schooling">
				<isNotEmpty property="schooling.id" prepend=" AND ">SCHOOLING = #schooling.id#</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="insuranceType">
				<isNotEmpty property="insuranceType.id" prepend=" AND ">INSURANCETYPE = #insuranceType.id#</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="memberNum">
				<isNotEmpty property="memberNum" prepend=" AND ">
					MEMBERNUM
					<![CDATA[>]]>
					#memberNum#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="memberNumz">
				<isNotEmpty property="memberNumz" prepend=" AND ">
					MEMBERNUM
					<![CDATA[<]]>
					#memberNumz#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="lastYearMemberIncome">
				<isNotEmpty property="lastYearMemberIncome" prepend=" AND ">
					LASTYEARMEMBERINCOME
					<![CDATA[>]]>
					#lastYearMemberIncome#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="lastYearMemberIncomez">
				<isNotEmpty property="lastYearMemberIncomez" prepend=" AND ">
					LASTYEARMEMBERINCOME
					<![CDATA[<]]>
					#lastYearMemberIncomez#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="poorBigInfo">
				<isNotEmpty property="poorBigInfo.id" prepend=" AND ">POORBIGINFO = #poorBigInfo.id#</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="poorInfo">
				<isNotEmpty property="poorInfo.id" prepend=" AND ">POORINFO = #poorInfo.id#</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="helpInfo">
				<isNotEmpty property="helpInfo" prepend=" AND ">HELPINFO LIKE #helpInfo#||'%'</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="yearHelpInfo">
				<isNotEmpty property="yearHelpInfo" prepend=" AND ">YEARHELPINFO LIKE #yearHelpInfo#||'%'</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="name">
				<isNotEmpty property="name" prepend=" AND ">NAME LIKE #name#||'%'</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="idCardNo">
				<isNotEmpty property="idCardNo" prepend=" AND ">IDCARDNO LIKE #idCardNo#||'%'</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="gender">
				<isNotEmpty property="gender.id" prepend=" AND ">GENDER = #gender.id#</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="mobileNumber">
				<isNotEmpty property="mobileNumber" prepend=" AND ">MOBILENUMBER LIKE #mobileNumber#||'%'</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="permanentAddress">
				<isNotEmpty property="permanentAddress" prepend=" AND ">PERMANENTADDRESS LIKE #permanentAddress#||'%'</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="serverContractor">
				<isNotEmpty property="serverContractor" prepend=" AND ">SERVERCONTRACTOR LIKE #serverContractor#||'%'</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="serverTelephone">
				<isNotEmpty property="serverTelephone" prepend=" AND ">SERVERTELEPHONE LIKE #serverTelephone#||'%'</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="serverJob">
				<isNotEmpty property="serverJob" prepend=" AND ">SERVERJOB LIKE #serverJob#||'%'</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="serverUnit">
				<isNotEmpty property="serverUnit" prepend=" AND ">SERVERUNIT LIKE #serverUnit#||'%'</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="birthDay">
				<isNotEmpty property="birthDay" prepend=" AND ">
					BIRTHDAY
					<![CDATA[>]]>
					#birthDay#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="birthDayz">
				<isNotEmpty property="birthDayz" prepend=" AND ">
					BIRTHDAY
					<![CDATA[<]]>
					#birthDayz#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="isPartyMember">
				<isNotEmpty property="isPartyMember" prepend=" AND ">ISPARTYMEMBER = #isPartyMember#</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="position">
				<isNotEmpty property="position.id" prepend=" AND ">POSITION = #position.id#</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="gridNo">
				<isNotEmpty property="gridNo" prepend=" AND ">GRIDNO LIKE #gridNo#||'%'</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="occurOrg">
				<isNotEmpty property="occurOrg.id" prepend=" AND ">OCCURORGID = #occurOrg.id#</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="bookingUnit">
				<isNotEmpty property="bookingUnit" prepend=" AND ">BOOKINGUNIT LIKE #bookingUnit#||'%'</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="registrant">
				<isNotEmpty property="registrant" prepend=" AND ">REGISTRANT LIKE #registrant#||'%'</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="registrationTime">
				<isNotEmpty property="registrationTime" prepend=" AND ">
					registrationTime
					<![CDATA[>]]>
					#registrationTime#
				</isNotEmpty>
			</isPropertyAvailable>
			<isPropertyAvailable property="registrationTimez">
				<isNotEmpty property="registrationTimez" prepend=" AND ">
					registrationTime
					<![CDATA[<]]>
					#registrationTimez#
				</isNotEmpty>
			</isPropertyAvailable>
	</sql>
	<select id="findUndoPoorPeopleForListCount" parameterClass="poorPeople" resultClass="java.lang.Integer">
		SELECT COUNT(*) FROM (
		<include refid="sql_findUndoPoorPeopleForList" />
		)
	</select>
	<select id="findUndoPoorPeopleForList" parameterClass="poorPeople" resultMap="poorPeopleMap">
		<include refid="sql_findUndoPoorPeopleForList" />
		<isPropertyAvailable property="sortField">
			<isNotEmpty property="sortField" prepend=" ORDER BY ">$sortField$</isNotEmpty>
			<isNotEmpty property="order">$order$</isNotEmpty>
		</isPropertyAvailable>
	</select>

	<insert id="addPoorPeople" parameterClass="poorPeople">
		<selectKey keyProperty="id" resultClass="java.lang.Long">
			<![CDATA[SELECT S_POORPEOPLES.NEXTVAL AS ID FROM DUAL]]>
		</selectKey>
		INSERT INTO POORPEOPLES(ID, ORGID, ORGINTERNALCODE, SERIALNUMBER, NAME, IDCARDNO, MOBILENUMBER, GENDER, BIRTHDAY, PERMANENTADDRESS,
		ISPARTYMEMBER, POSITION, SCHOOLING, INSURANCETYPE, MEMBERNUM, LASTYEARMEMBERINCOME, POORBIGINFO, POORINFO, HELPINFO, YEARHELPINFO,
		SERVERCONTRACTOR, SERVERTELEPHONE, SERVERJOB, SERVERUNIT, CREATEUSER, CREATEDATE, GRIDNO, OCCURORGID, OCCURORGINTERNALCODE,
		BOOKINGUNIT, REGISTRANT, REGISTRATIONTIME, CREATETABLETYPE,UPDATEDATE,ORGTYPE) VALUES(#id#, #organization.id#, #orgInternalCode#, #serialNumber#,
		#name#, #idCardNo#, #mobileNumber#, #gender.id#, #birthDay#, #permanentAddress#, #isPartyMember#, #position.id#, #schooling.id#,
		#insuranceType.id#, #memberNum#, #lastYearMemberIncome#, #poorBigInfo.id#, #poorInfo.id#, #helpInfo#, #yearHelpInfo#,
		#serverContractor#, #serverTelephone#, #serverJob#, #serverUnit#, #createUser#, #createDate#, #gridNo#, #occurOrg.id#,
		#occurOrgInternalCode#, #bookingUnit#, #registrant#, #createDate#, #createTableType.id#,#updateDate#,#organization.orgType.id#)
	</insert>

	<select id="getPoorPeopleById" parameterClass="java.lang.Long" resultMap="poorPeopleMap">
		SELECT * FROM POORPEOPLES WHERE ID=#value#
	</select>

	<delete id="deletePoorPeople" parameterClass="java.lang.String">DELETE FROM POORPEOPLES WHERE ID=#value#</delete>
	
	<delete id="deletePoorPeopleByIds">
		DELETE FROM POORPEOPLES where 
 		<iterate  conjunction="," open="id in (" close=")">
				#[]#
		</iterate>
	</delete>
	
	<!-- /*ORGID = #organization.id#, ORGINTERNALCODE = #orgInternalCode#,*/ -->
	<update id="updatePoorPeople" parameterClass="poorPeople">
		UPDATE POORPEOPLES SET SERIALNUMBER = #serialNumber#, NAME = #name#, IDCARDNO = #idCardNo#, MOBILENUMBER = #mobileNumber#, GENDER =
		#gender.id#, BIRTHDAY = #birthDay#, PERMANENTADDRESS = #permanentAddress#, ISPARTYMEMBER = #isPartyMember#, POSITION =
		#position.id#, SCHOOLING = #schooling.id#, INSURANCETYPE = #insuranceType.id#, MEMBERNUM = #memberNum#, LASTYEARMEMBERINCOME =
		#lastYearMemberIncome#, POORBIGINFO = #poorBigInfo.id#, POORINFO = #poorInfo.id#, HELPINFO = #helpInfo#, YEARHELPINFO =
		#yearHelpInfo#, SERVERCONTRACTOR = #serverContractor#, SERVERTELEPHONE = #serverTelephone#, SERVERJOB = #serverJob#, SERVERUNIT =
		#serverUnit#, UPDATEUSER = #updateUser#, UPDATEDATE = #updateDate#, GRIDNO = #gridNo#, REGISTRANT = #registrant#, CREATETABLETYPE =
		#createTableType.id#, OCCURORGID = #occurOrg.id#, OCCURORGINTERNALCODE = #occurOrgInternalCode# WHERE ID=#id#
	</update>

	<select id="getPeopleAspirationsByIdCardNo" parameterClass="poorPeople" resultMap="poorPeopleMap">
		SELECT * FROM POORPEOPLES WHERE IDCARDNO = #idCardNo#
	</select>

	<select id="getPeopleAspirationsBySerialNumber" parameterClass="poorPeople" resultMap="poorPeopleMap">
		SELECT * FROM POORPEOPLES WHERE SERIALNUMBER = #serialNumber#
	</select>

	<!-- 按照 建表类型 和 项目类型 统计数据 -->
	<select id="getReportGroupCount"  parameterClass="java.util.Map" resultMap="reportGroupCount">
		select createtabletype as createtabletype,
			   poorbiginfo as itemcategory,
			   count(id) as counts
		  from POORPEOPLES p
		 where p.orgid = #orgId#
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ p.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ p.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by createtabletype,poorbiginfo
	</select>
	
	<!-- 按照  项目类型 统计上月月份数据 -->
	<select id="getUnfinishByMonth" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select poorbiginfo as itemcategory,
		       count(p.id) as counts
		  from POORPEOPLES p
		  left join accountsteps_xichang a on a.accountid = p.id
		   and a.targetorgid = p.orgid
		 where a.isfinish = 0
		   and p.orgid = #orgId#
		   and a.accounttype = 'POORPEOPLE' 
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ a.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ a.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by isfinish, poorbiginfo
	</select>
	
	<!-- 按照 办结情况 和 项目类型 查询 -->
	<select id="getReportByIsFinishAndItemcategory" parameterClass="java.util.Map" resultMap="reportGroupCount">
		select isfinish as createtabletype,
		       poorbiginfo as itemcategory,
		       count(p.id) as counts
		  from POORPEOPLES p
		  left join accountsteps_xichang a on a.accountid = p.id
		   and a.targetorgid = p.orgid
		 where a.isfinish = 1
		   and a.accounttype = 'POORPEOPLE'
		   and p.orgid = #orgId# 
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ a.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ a.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by isfinish, poorbiginfo
	</select>
	
	<!-- 按照 实质性办结、程序性办结 和 项目类型 查询 -->
	<select id="getReportByFinishtypeAndItemcategory" parameterClass="java.util.Map" resultMap="reportGroupCount">
		select finishtype as createtabletype,
		       poorbiginfo as itemcategory,
		       count(p.id) as counts
		  from POORPEOPLES p
		  left join accountsteps_xichang a on a.accountid = p.id
		 <isNotPropertyAvailable property="orgCode" prepend="and">
		 		a.targetorgid = p.orgid
		 	and p.orgid = #orgId# 
		 </isNotPropertyAvailable>
		 where a.isfinish = 1
		   and a.accounttype = 'POORPEOPLE'
		   and a.finishtype is not null
		 <!-- orgCode,orgCodeFindLevel 查询包含下辖层级时使用 -->
		 <isPropertyAvailable property="orgCode" prepend="and">
			 	<![CDATA[ REGEXP_LIKE(a.targetorgcode,'^' || REPLACE(#orgCode#,'.','\.')]]>
			 	<isPropertyAvailable property="orgCodeFindLevel">
				 	<isLessEqual property="orgCodeFindLevel" compareValue="1">
					 	<![CDATA[ || '([^\.]{1,4}\.){1}' ]]>
				 	</isLessEqual>
				 	<isGreaterThan property="orgCodeFindLevel" compareValue="1">
					 	<![CDATA[ || '([^\.]{1,4}\.){1,$orgCodeFindLevel$}' ]]>
				 	</isGreaterThan>
			 	</isPropertyAvailable>
			 	<![CDATA[ || '$$') ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ a.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ a.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by finishtype, poorbiginfo
	</select>
	
	<!-- 按照 呈报类型（市） 和 项目类型 查询 -->
	<select id="getReportByReportToCityEndAndItemcategory" parameterClass="java.util.Map" resultMap="reportGroupCount">
		select reportToCityEnd as createtabletype,
		       poorbiginfo as itemcategory,
		       count(p.id) as counts
		  from POORPEOPLES p
		  left join accountsteps_xichang a on a.accountid = p.id
		 where a.targetorgid = #orgId# 
		   and a.accounttype = 'POORPEOPLE'
		   and a.reportToCityEnd is not null
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ a.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ a.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by reportToCityEnd, poorbiginfo
	</select>
	
	<!-- 按照 呈报类型（乡镇） 和 项目类型 查询 -->
	<select id="getReportByReportToTownEndAndItemcategory" parameterClass="java.util.Map" resultMap="reportGroupCount">
		select reporttotownend as createtabletype,
		       poorbiginfo as itemcategory,
		       count(p.id) as counts
		  from POORPEOPLES p
		  left join accountsteps_xichang a on a.accountid = p.id
		 where a.reporttotownend is not null
		   and a.accounttype = 'POORPEOPLE'
		   and a.targetorgid = #orgId# 
		 <isPropertyAvailable property="isFinish" prepend="and">
		 	<isEqual property="isFinish" compareValue="true">
		 		<![CDATA[ a.isfinish = #isFinish# ]]>
		 	</isEqual>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ a.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ a.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by reporttotownend, poorbiginfo
	</select>
	
	<!-- 获得按（村、社区呈报乡镇 或 乡镇直接建账）呈报市台账办 和项目类型统计数据 -->
	<select id="getReportByVillageOrTownReportToCityAndItemcategory" parameterClass="java.util.Map" resultMap="reportGroupCount">
		select case when (reporttotownend is null) then 1 when (reporttotownend = #reportToTown#) then 2 else 3 end as createtabletype,
			   poorbiginfo as itemcategory,
			   count(p.id) as counts
		  from POORPEOPLES p
		  left join accountsteps_xichang a on a.accountid = p.id
		   and a.accounttype = 'POORPEOPLE'
		 where a.targetorgid = #orgId#
		   and a.reporttocityend = #reportToCity#
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ a.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ a.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by reporttotownend, poorbiginfo
	</select>
	
		
	<!-- 按照 建账层级（1 as 市县区, 2 as 乡镇街道, 3 as 村社区） 和 项目类型 查询 -->
	<select id="getReportByCreateOrgLevelAndItemcategory" parameterClass="java.util.Map" resultMap="reportGroupCount">
		select 1 as createtabletype,
		       poorbiginfo as itemcategory,
		       count(p.id) as counts
		  from POORPEOPLES p
		 where 1=1
		<isPropertyAvailable property="orgCode" prepend="and" open="(" close=")">
			<![CDATA[ REGEXP_LIKE(p.orginternalcode, '^' || REPLACE(#orgCode#,'.','\.') || '$$') ]]>
			or (
			<![CDATA[ REGEXP_LIKE(p.orginternalcode, '^' || REPLACE(#orgCode#,'.','\.') || '[^\.]{1,4}\.$$') ]]>
			and p.orgtype = (#functionalOrg#)
			)
		 </isPropertyAvailable>
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ p.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ p.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by poorbiginfo
		union
		select 2 as createtabletype,
		       poorbiginfo as itemcategory,
		       count(p.id) as counts
		  from POORPEOPLES p
		 where 1=1
		 <isPropertyAvailable property="orgCode" prepend="and" open="(" close=")">
			(
			<![CDATA[ REGEXP_LIKE(p.orginternalcode, '^' || REPLACE(#orgCode#,'.','\.') || '[^\.]{1,4}\.$$') ]]>
			and p.orgtype = (#administrative#)
			) or (
			<![CDATA[ REGEXP_LIKE(p.orginternalcode, '^' || REPLACE(#orgCode#,'.','\.') || '([^\.]{1,4}\.){2}$$') ]]>
			and p.orgtype = (#functionalOrg#)
			)
		 </isPropertyAvailable>
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ p.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ p.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by poorbiginfo
		union
		select 3 as createtabletype,
		       poorbiginfo as itemcategory,
		       count(p.id) as counts
		  from POORPEOPLES p
		 where 1=1
		 <isPropertyAvailable property="orgCode" prepend="and">
			<![CDATA[ REGEXP_LIKE(p.orginternalcode, '^' || REPLACE(#orgCode#,'.','\.') || '([^\.]{1,4}\.){2}$$') ]]>
			and p.orgtype = (#administrative#)
		 </isPropertyAvailable>
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ p.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ p.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by poorbiginfo
	</select>

	<!-- 按照 办结层级（1 as 市县区, 2 as 乡镇街道, 3 as 村社区） 和 项目类型 查询 -->
	<select id="getReportByFinishOrgLevelAndItemcategory" parameterClass="java.util.Map" resultMap="reportGroupCount">
		select 1 as createtabletype,
		       poorbiginfo as itemcategory,
		       count(p.id) as counts
		  from POORPEOPLES p
		  left join accountsteps_xichang a 
		         on a.accountid = p.id
		 where a.accounttype = 'POORPEOPLE'
		   and a.isfinish = 1
		 <isPropertyAvailable property="orgCode" prepend="and" open="(" close=")">
			<![CDATA[ REGEXP_LIKE(a.targetorgcode, '^' || REPLACE(#orgCode#,'.','\.') || '$$') ]]>
			or (
			<![CDATA[ REGEXP_LIKE(a.targetorgcode, '^' || REPLACE(#orgCode#,'.','\.') || '[^\.]{1,4}\.$$') ]]>
			and a.orgtype = (#functionalOrg#)
			)
		 </isPropertyAvailable>
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ a.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ a.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by poorbiginfo
		union
		select 2 as createtabletype,
		       poorbiginfo as itemcategory,
		       count(p.id) as counts
		  from POORPEOPLES p
		  left join accountsteps_xichang a 
		         on a.accountid = p.id
		 where a.accounttype = 'POORPEOPLE'
		   and a.isfinish = 1
		 <isPropertyAvailable property="orgCode" prepend="and" open="(" close=")">
			(
			<![CDATA[ REGEXP_LIKE(a.targetorgcode, '^' || REPLACE(#orgCode#,'.','\.') || '[^\.]{1,4}\.$$') ]]>
			and a.orgtype = (#administrative#)
			) or (
			<![CDATA[ REGEXP_LIKE(a.targetorgcode, '^' || REPLACE(#orgCode#,'.','\.') || '([^\.]{1,4}\.){2}$$') ]]>
			and a.orgtype = (#functionalOrg#)
			)
		 </isPropertyAvailable>
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ a.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ a.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by poorbiginfo
		union
		select 3 as createtabletype,
		       poorbiginfo as itemcategory,
		       count(p.id) as counts
		  from POORPEOPLES p
		  left join accountsteps_xichang a 
		         on a.accountid = p.id
		 where a.accounttype = 'POORPEOPLE'
		   and a.isfinish = 1
		 <isPropertyAvailable property="orgCode" prepend="and">
			<![CDATA[ REGEXP_LIKE(a.targetorgcode, '^' || REPLACE(#orgCode#,'.','\.') || '([^\.]{1,4}\.){2}$$') ]]>
			and a.orgtype = (#administrative#)
		 </isPropertyAvailable>
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ a.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ a.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by poorbiginfo
	</select>
	<!-- 获得按（行政部门或者职能部门）呈报市台账办 和项目类型统计数据 -->
	<select id="getReportToCityAndItemcategory" parameterClass="java.util.Map" resultMap="reportGroupCount">
		select tc.orgtype as createtabletype,count(tc.id) as counts,tc.itemcategory as itemcategory
  		from (
  		select p.orgid as orgid,p.orgtype, p.id as id, p.poorbiginfo as itemcategory
          	from POORPEOPLES p left join accountsteps_xichang a on a.accountid = p.id and a.accounttype ='POORPEOPLE'
         where a.targetorgid = #orgId#
           and a.reporttocityend = #reportToCity#
         <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ p.createDate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ p.createDate <= #endDate# ]]>
		 </isPropertyAvailable>
           ) tc 
 		group by tc.orgtype,tc.itemcategory
	</select> 
	<!-- 获得按市(创建包含上报到市，然后流转)流转职能部门和行政部门 和项目类型统计数据 （不考虑流转后是否已办结）-->
	
	<select id="getReportToTownAndItemcategory" parameterClass="java.util.Map" resultMap="reportGroupCount">
		select tc.orgtype as createtabletype,count(tc.id) as counts,tc.itemcategory as itemcategory
  		from (
  		select a.targetorgid as orgid,a.orgtype, a.id as id, p.poorbiginfo as itemcategory
          	from POORPEOPLES p left join accountsteps_xichang a on a.accountid = p.id and a.accounttype ='POORPEOPLE'
         where <![CDATA[a.targetorgid <> #orgId# ]]>
           and a.reporttotownend = #reportToTown#
         <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ p.createDate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ p.createDate <= #endDate# ]]>
		 </isPropertyAvailable>
           ) tc 
 		group by tc.orgtype,tc.itemcategory
	</select> 
</sqlMap>