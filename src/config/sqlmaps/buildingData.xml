<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="buildingData">
	<typeAlias alias="BuildingData" type="com.tianque.domain.BuildingData" />

	<resultMap id="buildingDataResult" class="BuildingData">
		<result column="id" property="id" />
		<result column="buildingId" property="buildingId" />
		<result column="orgId" property="organization.id" />
		<result column="orgInternalCode" property="orgInternalCode" />
		<result column="buildingName" property="buildingName" />
		<result column="buildingAddress" property="buildingAddress"/>
		<result column="centerX" property="centerX" />
		<result column="centerY" property="centerY" />
		<result column="fullPinyin" property="fullPinyin" />
		<result column="simplePinyin" property="simplePinyin" />
		<result column="createDate" property="createDate" />
		<result column="createUser" property="createUser" />
		<result column="updateDate" property="updateDate" />
		<result column="updateUser" property="updateUser" />
	</resultMap>
	
	<resultMap class="BuildingData" id="buildingStatisticsDataResult">
		<result column="houseSum" property="houseSum" />
	</resultMap>

	<insert id="addBuildingData" parameterClass="BuildingData">
		<selectKey resultClass="java.lang.Long" keyProperty="id">
			<![CDATA[SELECT s_BUILDINGDATAS.NEXTVAL as id from dual ]]>
		</selectKey>
		insert into buildingDatas
		(id,buildingId,orgId,orgInternalCode,buildingName,buildingAddress,centerX,centerY,fullPinyin,simplePinyin,createDate,createUser)
		 values
		(#id#,#buildingId#,#organization.id#,#orgInternalCode#,#buildingName#,#buildingAddress#,#centerX#,#centerY#,#fullPinyin#,#simplePinyin#,#createDate#,#createUser#)
	</insert>

	<update id="updateBuildingData" parameterClass="BuildingData">
		update buildingDatas set
				id=#id#,
				buildingId=#buildingId#,
				orgId=#organization.id#,
				orgInternalCode=#orgInternalCode#,
				buildingName=#buildingName#,
				buildingAddress=#buildingAddress#,
				centerX=#centerX#,
				centerY=#centerY#,
				fullPinyin=#fullPinyin#,
				simplePinyin=#simplePinyin#,
				updateDate=#updateDate#,
				updateUser=#updateUser#
		where id=#id#
	</update>

	<delete id="deleteBuildingDataById" parameterClass="java.lang.Long">
		delete from buildingDatas where id=#value#
	</delete>
	<delete id="deleteBuildingDataByIds" parameterClass="java.util.Map">
		delete from buildingDatas where id
		<iterate close=")" open="(" prepend=" in " conjunction="," property="idList">
			#idList[]#
		</iterate>
	</delete>

	<select id="getBuildingDataByBuildingId" parameterClass="long" resultMap="buildingDataResult">
		select * from buildingDatas where buildingId=#value#
	</select>
	
	<select id="getBuildingDataById" parameterClass="java.lang.Long" resultMap="buildingDataResult">
		select * from buildingDatas where id=#value#
	</select>

</sqlMap>