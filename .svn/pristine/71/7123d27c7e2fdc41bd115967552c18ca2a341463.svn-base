<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="steadyWork">
	<typeAlias alias="steadyWork" type="com.tianque.xichang.working.steadyWork.domain.SteadyWork" />
	<typeAlias alias="ReportGroupCount" type="com.tianque.xichang.working.domain.ReportGroupCount" />

	<resultMap class="steadyWork" id="steadyWorkMap">
		<result property="id" column="ID"/>
		<result property="organization.id" column="ORGID"/>
		<result property="orgInternalCode" column="ORGINTERNALCODE"/>
		<result property="occurOrg.id" column="OCCURORGID"/>
		<result property="occurOrgInternalCode" column="OCCURORGINTERNALCODE"/>
		<result property="gridNo" column="GRIDNO"/>
		<result property="involvingSteadyNum" column="INVOLVINGSTEADYNUM"/>
		<result property="involvingSteadyType.id" column="INVOLVINGSTEADYTYPE"/>
		<result property="involvingSteadyInfo" column="INVOLVINGSTEADYINFO"/>
		<result property="previousSteadyInfo" column="PREVIOUSSTEADYINFO"/>
		<result property="previousResolveInfo" column="PREVIOUSRESOLVEINFO"/>
		<result property="steadyUnit" column="STEADYUNIT"/>
		<result property="steadyUser" column="STEADYUSER"/>
		<result property="resolveUnit" column="RESOLVEUNIT"/>
		<result property="resolveUser" column="RESOLVEUSER"/>
		<result property="aspirationType" column="ASPIRATIONTYPE"/>
		<result property="steadyInfo" column="STEADYINFO"/>
		<result property="warningType" column="WARNINGTYPE"/>
		<result property="serverTelephone" column="SERVERTELEPHONE"/>
		<result property="serverContractor" column="SERVERCONTRACTOR"/>
		<result property="serverJob" column="SERVERJOB"/>
		<result property="serverUnit" column="SERVERUNIT"/>
		<result property="serialNumber" column="SERIALNUMBER"/>
		<result property="createTableType.id" column="CREATETABLETYPE"/>
		<result property="bookingUnit" column="BOOKINGUNIT"/>
		<result property="registrant" column="REGISTRANT"/>
		<result property="registrationTime" column="REGISTRATIONTIME"/>
		<result property="createUser" column="CREATEUSER"/>
		<result property="updateUser" column="UPDATEUSER"/>
		<result property="createDate" column="CREATEDATE"/>
		<result property="updateDate" column="UPDATEDATE"/>
	</resultMap>

	<resultMap id="reportGroupCount" class="ReportGroupCount">
		<result property="rowType" column="createtabletype"/>
		<result property="items" column="itemcategory"/>
		<result property="count" column="counts"/>
	</resultMap>

	<sql id="findSteadyWork_sql_where">
		where id in
	     (select distinct atx.accountid from accountsteps_xichang atx
               where  atx.isfinish=#state# and atx.accounttype=#accountType# 
            <isNotEmpty  property="steadyWork.displayLevel" prepend=" and">
				<isEqual property="steadyWork.displayLevel" compareValue="sameGrade">
					 atx.targetorgcode = #steadyWork.orgInternalCode# 	
				</isEqual>	
				<isEqual property="steadyWork.displayLevel" compareValue="directJurisdiction">
					 atx.targetorgcode like #steadyWork.orgInternalCode#||'__' 	
				</isEqual>	
				<isEqual property="steadyWork.displayLevel" compareValue="allJurisdiction">
					 atx.targetorgcode like #steadyWork.orgInternalCode#||'%' 	
				</isEqual>	
			</isNotEmpty>
			<isNotNull property="orgId" prepend=" and ">
				atx.targetorgid = #orgId#
			</isNotNull>
		)
	</sql>
	
	<insert id="addSteadyWork" parameterClass="steadyWork">
		<selectKey keyProperty="id" resultClass="java.lang.Long">
			<![CDATA[SELECT S_STEADYWORKS.NEXTVAL as id from dual ]]>
		</selectKey>
		insert into STEADYWORKS 
		(
		  ID,ORGID,ORGINTERNALCODE,OCCURORGID,OCCURORGINTERNALCODE,GRIDNO,SERIALNUMBER,INVOLVINGSTEADYNUM,
		  INVOLVINGSTEADYTYPE,INVOLVINGSTEADYINFO,PREVIOUSSTEADYINFO,PREVIOUSRESOLVEINFO,STEADYUNIT,
		  STEADYUSER,RESOLVEUNIT,RESOLVEUSER,ASPIRATIONTYPE,STEADYINFO,WARNINGTYPE,BOOKINGUNIT,REGISTRANT,
		  REGISTRATIONTIME,CREATETABLETYPE,SERVERCONTRACTOR,SERVERTELEPHONE,SERVERJOB,SERVERUNIT,CREATEUSER,CREATEDATE,UPDATEDATE,ORGTYPE
		) 
		values
		(
		  #id#,#organization.id#,#orgInternalCode#,#occurOrg.id#,#occurOrgInternalCode#,#gridNo#,#serialNumber#,#involvingSteadyNum#,
		  #involvingSteadyType.id#,#involvingSteadyInfo#,#previousSteadyInfo#,#previousResolveInfo#,#steadyUnit#,#steadyUser#,
		  #resolveUnit#,#resolveUser#,#aspirationType#,#steadyInfo#,#warningType#,#bookingUnit#,#registrant#,#registrationTime#,
		  #createTableType.id#,#serverContractor#,#serverTelephone#,#serverJob#,#serverUnit#,#createUser#,#createDate#,#updateDate#,#organization.orgType.id#		
		)
	</insert>
	
	<update id="updateSteadyWork" parameterClass="steadyWork">
		update STEADYWORKS set id = #id# 
		<dynamic>
		    <isNotNull prepend="," property="occurOrg.id">
		  		OCCURORGID =  #occurOrg.id#
		    </isNotNull>
		    <isNotNull prepend="," property="occurOrgInternalCode">
		  		 OCCURORGINTERNALCODE =#occurOrgInternalCode#
		    </isNotNull>
		    <isNotNull prepend="," property="gridNo">
		  		 GRIDNO = #gridNo#
		    </isNotNull>
		    <isNotNull prepend="," property="serialNumber">
		  		SERIALNUMBER = #serialNumber#
		    </isNotNull>
		    <isNotNull prepend="," property="involvingSteadyNum">
		  		 INVOLVINGSTEADYNUM = #involvingSteadyNum#
		    </isNotNull>
		    <isNotNull prepend="," property="involvingSteadyType.id">
		  		 INVOLVINGSTEADYTYPE = #involvingSteadyType.id#
		    </isNotNull>
		    <isNotNull prepend="," property="involvingSteadyInfo">
		  		 INVOLVINGSTEADYINFO = #involvingSteadyInfo#
		    </isNotNull>
		    <isNotNull prepend="," property="previousSteadyInfo">
		  		 PREVIOUSSTEADYINFO = #previousSteadyInfo#
		    </isNotNull>
		    <isNotNull prepend="," property="previousResolveInfo">
		  		 PREVIOUSRESOLVEINFO = #previousResolveInfo#
		    </isNotNull>
		    <isNotNull prepend="," property="steadyUnit">
		  		 STEADYUNIT = #steadyUnit#
		    </isNotNull>
		    <isNotNull prepend="," property="steadyUser">
		  		 STEADYUSER = #steadyUser#
		    </isNotNull>
		    <isNotNull prepend="," property="resolveUnit">
		  		 RESOLVEUNIT = #resolveUnit#
		    </isNotNull>
		    <isNotNull prepend="," property="resolveUser">
		  		 RESOLVEUSER = #resolveUser#
		    </isNotNull>
		    <isNotNull prepend="," property="aspirationType">
		  		 ASPIRATIONTYPE = #aspirationType#
		    </isNotNull>
		    <isNotNull prepend="," property="steadyInfo">
		  		 STEADYINFO = #steadyInfo#
		    </isNotNull>
		    <isNotNull prepend="," property="warningType">
		  		 WARNINGTYPE = #warningType#
		    </isNotNull>
		    <isNotNull prepend="," property="registrant">
		  		 REGISTRANT = #registrant#
		    </isNotNull>
		    <isNotNull prepend="," property="createTableType.id">
		  		 CREATETABLETYPE = #createTableType.id#
		    </isNotNull>
		    <isNotNull prepend="," property="serverContractor">
		  		 SERVERCONTRACTOR = #serverContractor#
		    </isNotNull>
		    <isNotNull prepend="," property="serverTelephone">
		  		 SERVERTELEPHONE = #serverTelephone#
		    </isNotNull>
		    <isNotNull prepend="," property="serverJob">
		  		 SERVERJOB = #serverJob#
		    </isNotNull>
		    <isNotNull prepend="," property="serverUnit">
		  		 SERVERUNIT = #serverUnit#
		    </isNotNull>
		    <isNotNull prepend="," property="updateUser">
		  		UPDATEUSER = #updateUser#
		    </isNotNull>
		    <isNotNull prepend="," property="updateDate">
		  		 UPDATEDATE = #updateDate#
		    </isNotNull>
		where id = #id#
	   </dynamic>
	</update>
	
	<delete id="deleteSteadyWorkByIds" parameterClass="list">
		delete from STEADYWORKS where id in
		<iterate open="(" close=")" conjunction=",">
			#ids[]#
		</iterate>
	</delete>
	
	<select id="getSteadyWorkById" parameterClass="long" resultMap="steadyWorkMap">
		select * from STEADYWORKS where id=#value#
	</select>
	
	<select id="countUndoSteadyWorkForPageByOrgInternalCode" parameterClass="map" resultClass="java.lang.Integer">
		select count(0) from STEADYWORKS st 
		<include refid="findSteadyWork_sql_where" />		
	</select>
	
	<select id="findUndoSteadyWorkForPageByOrgInternalCode" parameterClass="map" resultMap="steadyWorkMap">
		select st.* from STEADYWORKS st
		<include refid="findSteadyWork_sql_where" />
		<dynamic prepend="order by">
			<isPropertyAvailable property="sortField">
				<isNotNull property="sortField">st.$sortField$</isNotNull>
				<isNotNull property="order">$order$</isNotNull>
			</isPropertyAvailable>
		</dynamic>		
	</select>
	<sql id="findPeopleinfo_sql_where">
		<dynamic prepend="WHERE">
			<isNotNull property="peopleInfo.name" prepend=" and ">
				sp.name like '$peopleInfo.name$%'
			</isNotNull>
			<isNotEmpty prepend="and" property="peopleInfo.idCardNo">
				sp.idCardNo  like #peopleInfo.idCardNo# || '%'
			</isNotEmpty>
			<isNotEmpty prepend="and" property="peopleInfo.gender.id">
				sp.gender = #peopleInfo.gender.id#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="peopleInfo.isPartyMember">
				sp.ISPARTYMEMBER = #peopleInfo.isPartyMember#
			</isNotEmpty>
		</dynamic>
	</sql>
	
	<sql id="findSteadyWorkInfo_sql_where">
		where  sw.id in(
    	 select distinct atx.accountid from accountsteps_xichang atx
              where  atx.isfinish=#state# and atx.accounttype=#accountType# 
		<isNotEmpty  property="steadyWork.displayLevel" prepend=" and">
			<isEqual property="steadyWork.displayLevel" compareValue="sameGrade">
				 atx.targetorgcode = #steadyWork.orgInternalCode# 	
			</isEqual>	
			<isEqual property="steadyWork.displayLevel" compareValue="directJurisdiction">
				 atx.targetorgcode like #steadyWork.orgInternalCode#||'__' 	
			</isEqual>	
			<isEqual property="steadyWork.displayLevel" compareValue="allJurisdiction">
				 atx.targetorgcode like #steadyWork.orgInternalCode#||'%' 	
			</isEqual>	
		</isNotEmpty>
		<isNotNull property="steadyWork.organization.id" prepend=" and ">
			atx.targetorgid = #steadyWork.organization.id#
		</isNotNull>
		)
		<isNotEmpty prepend="and" property="steadyWork.occurOrg.id">
			sw.OCCURORGID = #steadyWork.occurOrg.id#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="steadyWork.serialNumber">
			sw.SERIALNUMBER  like #steadyWork.serialNumber# || '%'
		</isNotEmpty>
		and	sw.id=t.steadyworkid
		<isNotNull property="steadyWork.hasAccountLog">
			<isEqual property="steadyWork.hasAccountLog" compareValue="1" prepend="and">
				sw.id in (
					select distinct ax.accountid from accountlogs_xichang ax where 
					ax.dealorgcode like #steadyWork.orgInternalCode#||'%' and ax.accounttype = #accountType#
				)
			</isEqual>
			<isEqual property="steadyWork.hasAccountLog" compareValue="0" prepend="and">
				sw.id not in (
					select distinct ax.accountid from accountlogs_xichang ax where 
					ax.dealorgcode like #steadyWork.orgInternalCode#||'%' and ax.accounttype = #accountType#
				)
			</isEqual>
		</isNotNull>
	</sql>
	
	<select id="countSteadyWorkForPageByCondition" parameterClass="map" resultClass="java.lang.Integer">
		select count(0) from steadyworks sw,
				(select distinct sp.steadyworkid as steadyworkid from steadywork_peopleinfo sp 
				<include refid="findPeopleinfo_sql_where"/>) t
		<include refid="findSteadyWorkInfo_sql_where" />		
	</select>
	
	<select id="findSteadyWorkForPageByCondition" parameterClass="map" resultMap="steadyWorkMap">
		select sw.* from steadyworks sw,
				(select distinct sp.steadyworkid as steadyworkid from steadywork_peopleinfo sp 
				<include refid="findPeopleinfo_sql_where"/>) t
		<include refid="findSteadyWorkInfo_sql_where" />
		<dynamic prepend="order by">
			<isPropertyAvailable property="sortField">
				<isNotNull property="sortField">sw.$sortField$</isNotNull>
				<isNotNull property="order">$order$</isNotNull>
			</isPropertyAvailable>
		</dynamic>		
	</select>
	
	
	<select id="getSteadyWorkBySerialNumber" parameterClass="java.lang.String" resultMap="steadyWorkMap">
		SELECT * FROM STEADYWORKS WHERE SERIALNUMBER = #value#
	</select>
	
	<!-- 按照 建表类型 和 项目类型 统计数据 -->
	<select id="getReportGroupCount"  parameterClass="java.util.Map" resultMap="reportGroupCount">
		select createtabletype as createtabletype,
			   aspirationtype as itemcategory,
			   count(id) as counts
		  from STEADYWORKS p
		 where p.orgid = #orgId#
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ p.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ p.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by createtabletype, aspirationtype
	</select>
	
	<!-- 按照  项目类型 统计上月月份数据 -->
	<select id="getUnfinishByMonth" parameterClass="java.util.Map" resultClass="java.util.HashMap" remapResults="true">
		select aspirationtype as itemcategory,
		       count(p.id) as counts
		  from STEADYWORKS p
		  left join accountsteps_xichang a on a.accountid = p.id
		   and a.targetorgid = p.orgid
		 where a.isfinish = 0
		   and p.orgid = #orgId#
		   and a.accounttype = 'STEADYWORK' 
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ p.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ p.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by isfinish, aspirationtype
	</select>
	
	<!-- 按照 办结情况 和 项目类型 查询 -->
	<select id="getReportByIsFinishAndItemcategory" parameterClass="java.util.Map" resultMap="reportGroupCount">
		select isfinish as createtabletype,
		       aspirationtype as itemcategory,
		       count(p.id) as counts
		  from STEADYWORKS p
		  left join accountsteps_xichang a on a.accountid = p.id
		   and a.targetorgid = p.orgid
		 where a.isfinish = 1
		   and a.accounttype = 'STEADYWORK'
		   and p.orgid = #orgId# 
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ p.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ p.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by isfinish, aspirationtype
	</select>
	
	<!-- 按照 实质性办结、程序性办结 和 项目类型 查询 -->
	<select id="getReportByFinishtypeAndItemcategory" parameterClass="java.util.Map" resultMap="reportGroupCount">
		select finishtype as createtabletype,
		       aspirationtype as itemcategory,
		       count(p.id) as counts
		  from STEADYWORKS p
		  left join accountsteps_xichang a on a.accountid = p.id
		 <isNotPropertyAvailable property="orgCode" prepend="and">
		 		a.targetorgid = p.orgid
		 	and p.orgid = #orgId# 
		 </isNotPropertyAvailable>
		 where a.isfinish = 1
		   and a.accounttype = 'STEADYWORK'
		   and a.finishtype is not null
		 <!-- orgCode,orgCodeFindLevel 查询包含下辖层级时使用 -->
		 <isPropertyAvailable property="orgCode" prepend="and">
		 	<![CDATA[ REGEXP_LIKE(a.targetorgcode,'^' || REPLACE(#orgCode#,'.','\.')]]>
		 	<isPropertyAvailable property="orgCodeFindLevel">
			 	<isLessEqual property="orgCodeFindLevel" compareValue="1">
				 	<![CDATA[ || '([^\.]{1,4}\.){1}' ]]>
			 	</isLessEqual>
			 	<isGreaterThan property="orgCodeFindLevel" compareValue="1">
				 	<![CDATA[ || '([^\.]{1,4}\.){1,$orgCodeFindLevel$}' ]]>
			 	</isGreaterThan>
		 	</isPropertyAvailable> 
		 	<![CDATA[ || '$$') ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ p.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ p.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by finishtype, aspirationtype
	</select>

	<!-- 按照 呈报类型（市） 和 项目类型 查询 -->
	<select id="getReportByReportToCityEndAndItemcategory" parameterClass="java.util.Map" resultMap="reportGroupCount">
		select reportToCityEnd as createtabletype,
		       aspirationtype as itemcategory,
		       count(p.id) as counts
		  from STEADYWORKS p
		  left join accountsteps_xichang a on a.accountid = p.id
		 where a.targetorgid = #orgId# 
		   and a.accounttype = 'STEADYWORK'
		   and a.reportToCityEnd is not null
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ p.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ p.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by reportToCityEnd, aspirationtype
	</select>
	
	<!-- 按照 呈报类型（乡镇） 和 项目类型 查询 -->
	<select id="getReportByReportToTownEndAndItemcategory" parameterClass="java.util.Map" resultMap="reportGroupCount">
		select reporttotownend as createtabletype,
		       aspirationtype as itemcategory,
		       count(p.id) as counts
		  from STEADYWORKS p
		  left join accountsteps_xichang a on a.accountid = p.id
		 where a.reporttotownend is not null
		   and a.accounttype = 'STEADYWORK'
		   and a.targetorgid = #orgId# 
		 <isPropertyAvailable property="isFinish" prepend="and">
		 	<isEqual property="isFinish" compareValue="true">
		 		<![CDATA[ a.isfinish = #isFinish# ]]>
		 	</isEqual>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ p.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ p.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by reporttotownend, aspirationtype
	</select>
	
	<!-- 获得按（村、社区呈报乡镇 或 乡镇直接建账）呈报市台账办 和项目类型统计数据 -->
	<select id="getReportByVillageOrTownReportToCityAndItemcategory" parameterClass="java.util.Map" resultMap="reportGroupCount">
		select case when (reporttotownend is null) then 1 when (reporttotownend = #reportToTown#) then 2 else 3 end as createtabletype,
			   aspirationtype as itemcategory,
			   count(p.id) as counts
		  from STEADYWORKS p
		  left join accountsteps_xichang a on a.accountid = p.id
		   and a.accounttype = 'STEADYWORK'
		 where a.targetorgid = #orgId#
		   and a.reporttocityend = #reportToCity#
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ p.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ p.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by reporttotownend, aspirationtype
	</select>

	<!-- 按照 建账层级（1 as 市县区, 2 as 乡镇街道, 3 as 村社区） 和 项目类型 查询 -->
	<select id="getReportByCreateOrgLevelAndItemcategory" parameterClass="java.util.Map" resultMap="reportGroupCount">
		select 1 as createtabletype,
		       aspirationtype as itemcategory,
		       count(p.id) as counts
		  from STEADYWORKS p
		 where 1=1
		 <isPropertyAvailable property="orgCode" prepend="and" open="(" close=")">
			<![CDATA[ REGEXP_LIKE(p.orginternalcode, '^' || REPLACE(#orgCode#,'.','\.') || '$$') ]]>
			or (
			<![CDATA[ REGEXP_LIKE(p.orginternalcode, '^' || REPLACE(#orgCode#,'.','\.') || '[^\.]{1,4}\.$$') ]]>
			and p.orgtype = (#functionalOrg#)
			)
		 </isPropertyAvailable>
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ p.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ p.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by aspirationtype
		union
		select 2 as createtabletype,
		       aspirationtype as itemcategory,
		       count(p.id) as counts
		  from STEADYWORKS p
		 where 1=1
		 <isPropertyAvailable property="orgCode" prepend="and" open="(" close=")">
			(
			<![CDATA[ REGEXP_LIKE(p.orginternalcode, '^' || REPLACE(#orgCode#,'.','\.') || '[^\.]{1,4}\.$$') ]]>
			and p.orgtype = (#administrative#)
			) or (
			<![CDATA[ REGEXP_LIKE(p.orginternalcode, '^' || REPLACE(#orgCode#,'.','\.') || '([^\.]{1,4}\.){2}$$') ]]>
			and p.orgtype = (#functionalOrg#)
			)
		 </isPropertyAvailable>
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ p.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ p.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by aspirationtype
		union
		select 3 as createtabletype,
		       aspirationtype as itemcategory,
		       count(p.id) as counts
		  from STEADYWORKS p
		 where 1=1
		 <isPropertyAvailable property="orgCode" prepend="and">
			<![CDATA[ REGEXP_LIKE(p.orginternalcode, '^' || REPLACE(#orgCode#,'.','\.') || '([^\.]{1,4}\.){2}$$') ]]>
			and p.orgtype = (#administrative#)
		 </isPropertyAvailable>
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ p.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ p.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by aspirationtype
	</select>

	<!-- 按照 办结层级（1 as 市县区, 2 as 乡镇街道, 3 as 村社区） 和 项目类型 查询 -->
	<select id="getReportByFinishOrgLevelAndItemcategory" parameterClass="java.util.Map" resultMap="reportGroupCount">
		select 1 as createtabletype,
		       aspirationtype as itemcategory,
		       count(p.id) as counts
		  from STEADYWORKS p
		  left join accountsteps_xichang a 
		         on a.accountid = p.id
		 where a.accounttype = 'STEADYWORK'
		   and a.isfinish = 1
		 <isPropertyAvailable property="orgCode" prepend="and" open="(" close=")">
			<![CDATA[ REGEXP_LIKE(a.targetorgcode, '^' || REPLACE(#orgCode#,'.','\.') || '$$') ]]>
			or (
			<![CDATA[ REGEXP_LIKE(a.targetorgcode, '^' || REPLACE(#orgCode#,'.','\.') || '[^\.]{1,4}\.$$') ]]>
			and a.orgtype = (#functionalOrg#)
			)
		 </isPropertyAvailable>
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ a.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ a.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by aspirationtype
		union
		select 2 as createtabletype,
		       aspirationtype as itemcategory,
		       count(p.id) as counts
		  from STEADYWORKS p
		  left join accountsteps_xichang a 
		         on a.accountid = p.id
		 where a.accounttype = 'STEADYWORK'
		   and a.isfinish = 1
		 <isPropertyAvailable property="orgCode" prepend="and" open="(" close=")">
			(
			<![CDATA[ REGEXP_LIKE(a.targetorgcode, '^' || REPLACE(#orgCode#,'.','\.') || '[^\.]{1,4}\.$$') ]]>
			and a.orgtype = (#administrative#)
			) or (
			<![CDATA[ REGEXP_LIKE(a.targetorgcode, '^' || REPLACE(#orgCode#,'.','\.') || '([^\.]{1,4}\.){2}$$') ]]>
			and a.orgtype = (#functionalOrg#)
			)
		 </isPropertyAvailable>
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ a.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ a.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by aspirationtype
		union
		select 3 as createtabletype,
		       aspirationtype as itemcategory,
		       count(p.id) as counts
		  from STEADYWORKS p
		  left join accountsteps_xichang a 
		         on a.accountid = p.id
		 where a.accounttype = 'STEADYWORK'
		   and a.isfinish = 1
		 <isPropertyAvailable property="orgCode" prepend="and">
			<![CDATA[ REGEXP_LIKE(a.targetorgcode, '^' || REPLACE(#orgCode#,'.','\.') || '([^\.]{1,4}\.){2}$$') ]]>
			and a.orgtype = (#administrative#)
		 </isPropertyAvailable>
		 <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ a.createdate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ a.createdate <= #endDate# ]]>
		 </isPropertyAvailable>
		 group by aspirationtype
	</select>
	<!-- 获得按（行政部门或者职能部门）呈报市台账办 和项目类型统计数据 -->
	<select id="getReportToCityAndItemcategory" parameterClass="java.util.Map" resultMap="reportGroupCount">
		select tc.orgtype as createtabletype,count(tc.id) as counts,tc.itemcategory as itemcategory
  		from (
  		select p.orgid as orgid,p.orgtype, p.id as id, p.aspirationtype as itemcategory
          	from STEADYWORKS p left join accountsteps_xichang a on a.accountid = p.id and a.accounttype ='STEADYWORK'
         where a.targetorgid = #orgId#
           and a.reporttocityend = #reportToCity#
         <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ p.createDate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ p.createDate <= #endDate# ]]>
		 </isPropertyAvailable>
           ) tc 
 		group by tc.orgtype,tc.itemcategory
	</select> 
	<!-- 获得按市(创建包含上报到市，然后流转)流转职能部门和行政部门 和项目类型统计数据 （不考虑流转后是否已办结）-->
	
	<select id="getReportToTownAndItemcategory" parameterClass="java.util.Map" resultMap="reportGroupCount">
		select tc.orgtype as createtabletype,count(tc.id) as counts,tc.itemcategory as itemcategory
  		from (
  		select a.targetorgid as orgid,a.orgtype, a.id as id, p.aspirationtype as itemcategory
          	from STEADYWORKS p left join accountsteps_xichang a on a.accountid = p.id and a.accounttype ='STEADYWORK'
         where <![CDATA[a.targetorgid <> #orgId# ]]>
           and a.reporttotownend = #reportToTown#
         <isPropertyAvailable property="startDate" prepend="and">
		 	<![CDATA[ p.createDate >= #startDate# ]]>
		 </isPropertyAvailable>
		 <isPropertyAvailable property="endDate" prepend="and">
		 	<![CDATA[ p.createDate <= #endDate# ]]>
		 </isPropertyAvailable>
           ) tc 
 		group by tc.orgtype,tc.itemcategory
	</select> 
</sqlMap>