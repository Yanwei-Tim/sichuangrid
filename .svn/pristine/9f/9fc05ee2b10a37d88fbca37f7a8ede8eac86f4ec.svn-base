package com.tianque.openLayersMap.util;

import java.util.ArrayList;
import java.util.List;

public enum ModuleMap {
	RECTIFICATIVE_PERSON(DocumentType.RECTIFICATIVEPERSON.name(), "社区矫正人员",
			"rectificativePerson"), DRUGGY_PERSON(DocumentType.DRUGGY.name(),
			"吸毒人员", "druggy"), MENTAL_PATIENT(DocumentType.MENTAL_PATIENT
			.name(), "精神病人员", "mentalPatient"), POSITIVE_INFO(
			DocumentType.POSITIVE_INFO.name(), "刑释人员", "positiveInfo"), SUPERIOR_VISIT(
			DocumentType.SUPERIOR_VISIT.name(), "重点上访人员", "superiorVisit"), DANGEROUS_GOODS_PRACTITIONER(
			DocumentType.DANGEROUS_GOODS_PRACTITIONER.name(), "危险品从业人员",
			"dangerousGoodsPractitioner"), IDLE_YOUTH(DocumentType.IDLE_YOUTH
			.name(), "重点青少年", "idleYouth"), RELIGION_BELIEF(
			DocumentType.RELIGION_BELIEF.name(), "民族宗教人员", "religionBelief"), OTHER_ATTENTION_PERSONNE(
			DocumentType.OTHER_ATTENTION_PERSONNEL.name(), "其他关注人员",
			"attentionObject"), ENTERPRISE_ABOVE(DocumentType.ENTERPRISEKEY
			.name(), "规上企业", "enterpriseKey"), ENTERPRISE_PROTECTION_KEY(
			DocumentType.PROTECTIONKEY.name(), "保护重点", "protectionKey"), ENTERPRISE_SAFETY_PRODUCTION_KEY(
			DocumentType.SAFETYPRODUCTIONKEY.name(), "安全生产重点",
			"safetyProductionKey"), ENTERPRISE_FIRE_SAFETY_KEY(
			DocumentType.FIRESAFETYKEY.name(), "消防安全重点", "fireSafetyKey"), ENTERPRISE_SECURITY_KEY(
			DocumentType.SECURITYKEY.name(), "治安重点", "securityKey"), PLACE_LETTING_HOUSE(
			DocumentType.LETTING_HOUSE.name(), "出租房", "lettingHouse"), PLACE_SCHOOL(
			DocumentType.SCHOOLS.name(), "学校", "school"), PLACE_LEGALINSTITUTION(
			DocumentType.LEGALINSTITUTION.name(), "事业单位", "legalInstitution"), PLACE_ENTERPRISELEGAL(
			DocumentType.ENTERPRISELEGAL.name(), "企业单位", "enterpriseLegal"), PLACE_SOCIALGROUPLEGAL(
			DocumentType.SOCIALGROUPLEGAL.name(), "非企业、社会团体",
			"socialGroupLegal"), PLACE_INTERNETBAR(DocumentType.INTERNETBAR
			.name(), "网吧", "internetBar"), PLACE_RELIGION(DocumentType.RELIGION
			.name(), "宗教场所", "religion"), PLACE_HOSPITAL(DocumentType.HOSPITAL
			.name(), "医院", "hospital"), PLACE_ADMINISTRATIVE_INSTITUTION(
			DocumentType.ADMINISTRATIVE_INSTITUTION.name(), "行政事业单位",
			"administrativeInstitution"), PLACE_OTHER_LOCALE(
			DocumentType.OTHERLOCALES.name(), "其它重点场所", "otherLocale"), PLACE_HOUSE_INFO(
			"houseInfo", "住房信息", "houseProperty"), PLACE_DANGEROUSCHEMICALSUNIT(
			DocumentType.DANGEROUSCHEMICALSUNIT.name(), "危险化学品单位",
			"dangerouschemicalsunit"), ENTERPRISE_DOWN(
			DocumentType.ENTERPRISEDOWNKEY.name(), "规下企业", "enterpriseDownKey"), ACTUALCOMPANY(
			DocumentType.ACTUALCOMPANY.name(), "实有单位", "actualCompany"), NEWSOCIETYFEDERATIONS(
			DocumentType.NEWSOCIETYFEDERATIONS.name(), "社会组织",
			BigModeType.TWONEWGROUP), NEWECONOMICORGANIZATIONS(
			DocumentType.NEWECONOMICORGANIZATIONS.name(), "新经济组织",
			BigModeType.TWONEWGROUP), SCENIC_SPOTS(DocumentType.SCENICSPOTS
			.name(), "旅游景点", BigModeType.SCENICS_MANAGE), SCENIC_EQUIPMENT(
			DocumentType.SCENICEQUIPMENT.name(), "配置设施",
			BigModeType.SCENICS_MANAGE), SCENIC_TRAFFIC(
			DocumentType.SCENICTRAFFIC.name(), "景区交通",
			BigModeType.SCENICS_MANAGE),

	NEWPUBLICPLACE(DocumentType.NEWPUBLICPLACE.name(), "公共活动场所",
			BigModeType.NEW_COMPANY_PLACE), TRAFFICPLACE(
			DocumentType.TRAFFICPLACE.name(), "交通场所",
			BigModeType.NEW_COMPANY_PLACE), ENTERTAINMENTPLACE(
			DocumentType.ENTERTAINMENTPLACE.name(), "娱乐场所",
			BigModeType.NEW_COMPANY_PLACE), TRADEPLACE(DocumentType.TRADEPLACE
			.name(), "商贸场所", BigModeType.NEW_COMPANY_PLACE), NEWINTERNETBAR(
			DocumentType.NEWINTERNETBAR.name(), "网吧",
			BigModeType.NEW_COMPANY_PLACE), ACCOMMODATIONSERVICESPLACE(
			DocumentType.ACCOMMODATIONSERVICESPLACE.name(), "住宿服务场所",
			BigModeType.NEW_COMPANY_PLACE), NEWFOODSERVICESPLACE(
			DocumentType.NEWFOODSERVICESPLACE.name(), "餐饮服务场所",
			BigModeType.NEW_COMPANY_PLACE), TRAVELINGPLACE(
			DocumentType.TRAVELINGPLACE.name(), "旅游场所",
			BigModeType.NEW_COMPANY_PLACE), CONSTRUCTIONPLACE(
			DocumentType.CONSTRUCTIONPLACE.name(), "施工场所",
			BigModeType.NEW_COMPANY_PLACE), OTHERPLACE(DocumentType.OTHERPLACE
			.name(), "场所-其他", BigModeType.NEW_COMPANY_PLACE), PARTYGOVERNMENTORGANCOMPANY(
			DocumentType.PARTYGOVERNMENTORGANCOMPANY.name(), "党政机关",
			BigModeType.NEW_UNIT_PLACE), NEWSCHOOLS(DocumentType.NEWSCHOOLS
			.name(), "学校", BigModeType.NEW_UNIT_PLACE), NEWHOSPITAL(
			DocumentType.NEWHOSPITAL.name(), "医院", BigModeType.NEW_UNIT_PLACE), NEWDANGEROUSCHEMICALSUNIT(
			DocumentType.NEWDANGEROUSCHEMICALSUNIT.name(), "危化品存放单位",
			BigModeType.NEW_UNIT_PLACE), OTHERCOMPANY(DocumentType.OTHERCOMPANY
			.name(), "单位-其他", BigModeType.NEW_UNIT_PLACE), NEWSAFETYPRODUCTIONKEY(
			DocumentType.NEWSAFETYPRODUCTIONKEY.name(), "安全生产重点",
			BigModeType.KEY_COMPANY_PLACE), NEWFIRESAFETYKEY(
			DocumentType.NEWFIRESAFETYKEY.name(), "消防安全重点",
			BigModeType.KEY_COMPANY_PLACE), NEWSECURITYKEY(
			DocumentType.NEWSECURITYKEY.name(), "治安重点",
			BigModeType.KEY_COMPANY_PLACE), POLLUTIONSOURCE(
			DocumentType.POLLUTIONSOURCE.name(), "污染源",
			BigModeType.KEY_COMPANY_PLACE), ENTERPRISE(DocumentType.ENTERPRISE
			.name(), "规上企业", BigModeType.ENTERPRISE_PLACE), ENTERPRISEDOWN(
			DocumentType.ENTERPRISEDOWN.name(), "规下企业",
			BigModeType.ENTERPRISE_PLACE);

	private String moduleType;

	private String moduleName;

	private String entityName;

	private ModuleMap(String moduleType, String moduleName, String entityName) {
		this.moduleType = moduleType;
		this.moduleName = moduleName;
		this.entityName = entityName;
	}

	public String getModuleType() {
		return moduleType;
	}

	public String getModuleName() {
		return moduleName;
	}

	public String getEntityName() {
		return entityName;
	}

	// 遍历所有的中文名称
	public static List<String> getShowNameList() {
		List<String> list = new ArrayList<String>();
		for (ModuleMap g : ModuleMap.values()) {
			System.out.println(g.getModuleName());
			list.add(g.getModuleName());
		}

		return list;
	}

	// 遍历所有的英文名称
	public static List<String> getNameList() {
		List<String> list = new ArrayList<String>();
		for (ModuleMap g : ModuleMap.values()) {
			System.out.println(g.getModuleType());
			list.add(g.getModuleType());
		}

		return list;
	}

	// 视图显示模块名称
	public static String getModuleName(String moduleType) {
		String moduleName = "";
		for (ModuleMap mp : ModuleMap.values()) {
			if (mp.getModuleType().equals(moduleType)) {
				moduleName = mp.getModuleName();
				break;
			}
		}
		return moduleName;
	}

	// 获取操作服务名称
	public static String getEntityName(String moduleType) {
		String entityName = "";
		for (ModuleMap mp : ModuleMap.values()) {
			if (mp.getModuleType().equals(moduleType)) {
				entityName = mp.getEntityName();
				break;
			}
		}
		return entityName;
	}

	// 获取模块类型
	public static String getModuleType(String entityName) {
		ModuleMap moduleMap = null;
		for (ModuleMap mp : ModuleMap.values()) {
			if (mp.getEntityName().equals(entityName)) {
				moduleMap = mp;
				break;
			}
		}
		return null == moduleMap ? "" : moduleMap.getModuleType();
	}

	public static Integer judgeFromPersonOrPlase(String moduleType) {
		List<String> personTypes = new ArrayList<String>();
		personTypes.add(ModuleMap.RECTIFICATIVE_PERSON.getModuleType());
		personTypes.add(ModuleMap.DRUGGY_PERSON.getModuleType());
		personTypes.add(ModuleMap.MENTAL_PATIENT.getModuleType());
		personTypes.add(ModuleMap.POSITIVE_INFO.getModuleType());
		personTypes.add(ModuleMap.SUPERIOR_VISIT.getModuleType());
		personTypes.add(ModuleMap.DANGEROUS_GOODS_PRACTITIONER.getModuleType());
		personTypes.add(ModuleMap.IDLE_YOUTH.getModuleType());
		personTypes.add(ModuleMap.RELIGION_BELIEF.getModuleType());
		personTypes.add(ModuleMap.OTHER_ATTENTION_PERSONNE.getModuleType());
		personTypes.add(ModuleMap.PLACE_HOUSE_INFO.getModuleType());

		List<String> placeTypes = new ArrayList<String>();
		placeTypes.add(ModuleMap.ENTERPRISE_ABOVE.getModuleType());
		placeTypes.add(ModuleMap.ENTERPRISE_PROTECTION_KEY.getModuleType());
		placeTypes.add(ModuleMap.ENTERPRISE_SAFETY_PRODUCTION_KEY
				.getModuleType());
		placeTypes.add(ModuleMap.ENTERPRISE_FIRE_SAFETY_KEY.getModuleType());
		placeTypes.add(ModuleMap.ENTERPRISE_SECURITY_KEY.getModuleType());
		placeTypes.add(ModuleMap.PLACE_LETTING_HOUSE.getModuleType());
		placeTypes.add(ModuleMap.PLACE_SCHOOL.getModuleType());
		placeTypes.add(ModuleMap.PLACE_RELIGION.getModuleType());
		placeTypes.add(ModuleMap.PLACE_HOSPITAL.getModuleType());
		placeTypes.add(ModuleMap.PLACE_HOUSE_INFO.getModuleType());
		placeTypes.add(ModuleMap.PLACE_OTHER_LOCALE.getModuleType());
		placeTypes.add(ModuleMap.PLACE_LEGALINSTITUTION.getModuleType());
		placeTypes.add(ModuleMap.PLACE_ENTERPRISELEGAL.getModuleType());
		placeTypes.add(ModuleMap.PLACE_SOCIALGROUPLEGAL.getModuleType());
		placeTypes.add(ModuleMap.PLACE_INTERNETBAR.getModuleType());
		placeTypes.add(ModuleMap.PLACE_DANGEROUSCHEMICALSUNIT.getModuleType());
		placeTypes.add(ModuleMap.ENTERPRISE_DOWN.getModuleType());
		placeTypes.add(ModuleMap.ACTUALCOMPANY.getModuleType());
		placeTypes.add(ModuleMap.NEWSOCIETYFEDERATIONS.getModuleType());
		placeTypes.add(ModuleMap.NEWECONOMICORGANIZATIONS.getModuleType());
		placeTypes.add(ModuleMap.SCENIC_SPOTS.getModuleType());
		placeTypes.add(ModuleMap.SCENIC_EQUIPMENT.getModuleType());
		placeTypes.add(ModuleMap.SCENIC_TRAFFIC.getModuleType());

		placeTypes.add(ModuleMap.NEWPUBLICPLACE.getModuleType());
		placeTypes.add(ModuleMap.TRAFFICPLACE.getModuleType());
		placeTypes.add(ModuleMap.ENTERTAINMENTPLACE.getModuleType());
		placeTypes.add(ModuleMap.TRADEPLACE.getModuleType());
		placeTypes.add(ModuleMap.NEWINTERNETBAR.getModuleType());
		placeTypes.add(ModuleMap.ACCOMMODATIONSERVICESPLACE.getModuleType());
		placeTypes.add(ModuleMap.NEWFOODSERVICESPLACE.getModuleType());
		placeTypes.add(ModuleMap.TRAVELINGPLACE.getModuleType());
		placeTypes.add(ModuleMap.CONSTRUCTIONPLACE.getModuleType());
		placeTypes.add(ModuleMap.OTHERPLACE.getModuleType());
		placeTypes.add(ModuleMap.PARTYGOVERNMENTORGANCOMPANY.getModuleType());
		placeTypes.add(ModuleMap.NEWSCHOOLS.getModuleType());
		placeTypes.add(ModuleMap.NEWHOSPITAL.getModuleType());
		placeTypes.add(ModuleMap.NEWDANGEROUSCHEMICALSUNIT.getModuleType());
		placeTypes.add(ModuleMap.OTHERCOMPANY.getModuleType());
		placeTypes.add(ModuleMap.NEWSAFETYPRODUCTIONKEY.getModuleType());
		placeTypes.add(ModuleMap.NEWFIRESAFETYKEY.getModuleType());
		placeTypes.add(ModuleMap.NEWSECURITYKEY.getModuleType());
		placeTypes.add(ModuleMap.POLLUTIONSOURCE.getModuleType());
		placeTypes.add(ModuleMap.ENTERPRISE.getModuleType());
		placeTypes.add(ModuleMap.ENTERPRISEDOWN.getModuleType());
		if (personTypes.contains(moduleType))
			return 1;
		if (placeTypes.contains(moduleType))
			return -1;
		return 0;
	}

}
