<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib prefix="s" uri="/struts-tags"%>	
<%@ include file="/includes/baseInclude.jsp"%>
<script type="text/javascript">

var isMeasureEnd=false;//是否测量结束
//测面积
function measureArea(that){
	$(that).addClass("currentPosClick").siblings().removeClass("currentPosClick");
	$(".clearMaptraceTools .clearMaptrace").removeClass("hidden").addClass("curClearMapEffect");
	$("#map").TqMap("deactivateMeasureControl");
	$("#map").TqMap("deleteAllPopupText");
	$("#map").TqMap("drawFeatureMeasure",{type:"polygon",featureClickMapEnd:measureAreaClickMapEnd});
	$("#map").TqMap("registerEvent",{eventName:"mousemove",func:mouseTipFunAddPolygon});
}

function measureAreaClickMapEnd(event){
	$("#map").TqMap("deleteAllPopupText");
	var out = event.measure.toFixed(3)  + event.units+"<sup>2</sup>";
	var lon=event.geometry.components[0].getBounds().getCenterLonLat().lon;//获取中心点坐标
	var lat=event.geometry.components[0].getBounds().getCenterLonLat().lat;//获取中心点坐标
	if(isTransformat){
		transformat25DArea(event,lon,lat);
	}else{
		createMeasurePopupText(lon,lat,out,85,15);
	}
    $("#map").TqMap("deleteMouseTip");//删除鼠标跟随的提示信息
	$("#map").TqMap("unregisterEvent",{eventName:"mousemove",func:mouseTipFunAddPolygon});
}
//测距
function measureRange(that){
	$(that).addClass("currentPosClick").siblings().removeClass("currentPosClick");
	$(".clearMaptraceTools .clearMaptrace").removeClass("hidden").addClass("curClearMapEffect");
	$("#map").TqMap("deactivateMeasureControl");
	$("#map").TqMap("deleteAllPopupText");
	$("#map").TqMap("drawFeatureMeasure",{featureClickMap:measureRangeClickMap,featureClickMapEnd:measureRangeClickMapEnd});
	$("#map").TqMap("registerEvent",{eventName:"mousemove",func:mouseTipFunAddRange});
}

function measureRangeClickMap(event) {
	if(isMeasureEnd){
		$("#map").TqMap("deleteAllPopupText");
		isMeasureEnd=false;
	}
	var out = event.measure.toFixed(3) + "&nbsp;" + event.units;
	var components = event.geometry.components;
	var lon=components[components.length-1].x;
  	var lat=components[components.length-1].y;
  	if(isTransformat){
  		transformat25DLength(event,lon,lat);
	}else{
		createMeasurePopupText(lon,lat,out,65,12);
	}
}

function measureRangeClickMapEnd(event) {
  	measureRangeClickMap(event);
  	$("#map").TqMap("deleteMouseTip");//删除鼠标跟随的提示信息
	$("#map").TqMap("unregisterEvent",{eventName:"mousemove",func:mouseTipFunAddPolygon});
	isMeasureEnd=true;
}

function componentsToArrays(components){
	var lonlatsArray = "";
	if(components!=null&&components!=""){
		for(var i=0;i<components.length;i++){
			lonlatsArray += "[" + components[i].x + "," + components[i].y + "],";
		}
		lonlatsArray = lonlatsArray.substring(0,lonlatsArray.length-1);
	}
	return "["+lonlatsArray+"]";
}

//显示本级区域边界
function showCurrentArea(that){
	$(that).addClass("currentPosClick").siblings().removeClass("currentPosClick");
	$(".clearMaptraceTools .clearMaptrace").removeClass("hidden").addClass("curClearMapEffect");
// 	clearFeaturesByMarkerId_objectName("currentArea");
	$("#map").TqMap("removeAllFeatures");
	$("#map").TqMap("deleteAllPopupText");
	
	var layerData = getGis2DLayerDataByOrgId($('#currOrgId').val());
	if(layerData!=null && layerData!=""){
		
		var popText=$("#map").TqMap("addPopupText",{
			 lon:layerData.lon,
			 lat:layerData.lat,
			 popupText:layerData.organization.orgName,
			 data:{orgId:layerData.organization.id},
			 backgroundColor:'#66CC33',
			 autoSize:true
		});
		var color = getFillColorUrl(0);
		$("#map").TqMap("createSelectFeature");
		$("#map").TqMap("featureShow",{
			points:layerData.points,
			featureId:layerData.id,
			fillColor:color,
			data:{lon:layerData.lon,lat:layerData.lat,orgId:layerData.organization.id}
		});
	}else{
		$.messageBox({
			message:"当前部门还未划分地图区域！",
			level:'error'
		});
	}
}

//显示下辖区域边界
function showJurisdictionArea(that) {
	$(that).addClass("currentPosClick").siblings().removeClass("currentPosClick");
	$(".clearMaptraceTools .clearMaptrace").removeClass("hidden").addClass("curClearMapEffect");
	clearFeaturesByMarkerId_objectName("jurisdictionArea");
	showUnderGis2DLayersByOrgId($('#currOrgId').val());
}

//显示当前部门下辖区域的信息
function showUnderGis2DLayersByOrgId(orgId){
	$("#map").TqMap("removeAllFeatures");
	$("#map").TqMap("deleteAllPopupText");
	var response = getUnderGis2DLayersByOrgId(orgId);
	if(response!=null&&response!=""){
		for(var i=0;i<response.length;i++){
			var layerData = TQConvert.toPoints(response[i]);
			var popText=$("#map").TqMap("addPopupText",{
				 lon:layerData.lon,
				 lat:layerData.lat,
				 popupText:layerData.organization.orgName,
				 data:{orgId:layerData.organization.id},
				 backgroundColor:'#66CC33',
				 autoSize:true
			});

			var color = getFillColorUrl(i);
			$("#map").TqMap("createSelectFeature");
			$("#map").TqMap("featureShow",{
				points:layerData.points,
				featureId:layerData.id,
				fillColor:color,
				data:{lon:layerData.lon,lat:layerData.lat,orgId:layerData.organization.id}
			});
		}
	}else{
		$.messageBox({level:'error', message:"当前下辖区域还未划分地图区域！" });
	}
}

//画面统计
$("#drawPolygon").click(function(){
	$("#map").TqMap("deletePopup");
	$("#map").TqMap("deactivateMeasureControl");
	$("#map").TqMap("deleteAllPopupText");
	$("#map").TqMap("drawFeatureMeasure",{type:"polygon",featureClickMapEnd:featureClickMapEnd});
	$("#map").TqMap("registerEvent",{eventName:"mousemove",func:mouseTipFunAddPolygon});
});

function featureClickMapEnd(feature){
	$("#map").TqMap("deleteAllPopupText");
	var polygonPoints = feature.geometry+ "";
	drawPolygonAndRegularPolygonStatistics(polygonPoints);
	var lon=feature.geometry.components[0].getBounds().getCenterLonLat().lon;//获取中心点坐标
	var lat=feature.geometry.components[0].getBounds().getCenterLonLat().lat;//获取中心点坐标
	var popupText = feature.measure.toFixed(3)  + feature.units+"<sup>2</sup>";
	if(isTransformat){
		transformat25DArea(feature,lon,lat);
	}else{
		createMeasurePopupText(lon,lat,popupText,85,15);
	}
    /*
	$("#map").TqMap("addPopupText",{
		lon:lon,
		lat:lat,
		popupText:"<div class='popupText'>"+popupText+"</div>",
		popupW:'',
		backgroundColor:"#66CC33"
	});
	*/
}

function transformat25DArea(event,lon,lat){
	TQTransformat.to25DArea($.extend(event,{
		success:function(data){
			if(!data){
				data = event.measure.toFixed(3)  + feature.units+"<sup>2</sup>";
			}
			createMeasurePopupText(lon,lat,data,65,12);
		}
	}))
}

function transformat25DLength(event,lon,lat){
	TQTransformat.to25DLength($.extend(event,{
		success:function(data){
			if(!data){
				data = event.measure.toFixed(3) + "&nbsp;" + event.units;
			}
			createMeasurePopupText(lon,lat,data,65,12);
		}
	}))
}

//画多边形
function drawRegularPolygon(that,sides){
	$(that).addClass("currentPosClick").siblings().removeClass("currentPosClick");
	$(".clearMaptraceTools .clearMaptrace").removeClass("hidden").addClass("curClearMapEffect");
	$("#map").TqMap("deletePopup");
	$("#map").TqMap("deactivateMeasureControl");
	$("#map").TqMap("drawFeatureMeasure",{type:"regularPolygon",sides:sides,featureClickMapEnd:featureClickMapEnd});
	$("#map").TqMap("registerEvent",{eventName:"mousemove",func:mouseTipFunAddCircle});
}	

function drawPolygonAndRegularPolygonStatistics(points){
	var lon=mapMousemoveLon;
	var lat=mapMousemoveLat;
	var lonlat={lon:lon,lat:lat};
	addPopup(points,lon,lat,lonlat);
}

function addPopup(points,lon,lat,lonlat){
	$("#map").TqMap("addPopup",{
		url:PATH+"/gis/twoDimensionMapStatisticCommonManage/statisticTwoDimensionMapInfoByOrgIdAndPoints.action?points="+points+"&organization.id="+$('#currOrgId').val()+"&drawAreaStatisticVo.gisType="+gisType,
		lon:lon,
		lat:lat,
		lonlat:lonlat,
		popupW:250,
		popupH:180
	});
}

function createMeasurePopupText(lon,lat,popupText,popupW,popupH){
	$("#map").TqMap("addPopupText",{
		lon:lon,
		lat:lat,
		popupText:popupText,
		backgroundColor:"#66CC33",
		autoSize:true
	});
}

function mouseTipFunAddPolygon(){
	$("#map").TqMap("addMouseTip",{evt:event,msg:"请单击地图画区域,双击结束画图"});
}
function mouseTipFunAddCircle(){
	$("#map").TqMap("addMouseTip",{evt:event,msg:"请点击地图画区域,松开结束画图"});
}
function mouseTipFunAddRange(){
	$("#map").TqMap("addMouseTip",{evt:event,msg:"请单击地图测距,双击结束测距"});
}
function mouseTipFunDelHourse(){
	$("#map").TqMap("addMouseTip",{evt:event,msg:"请选择要删除的建筑物,点击删除！"});
}
function mouseTipFunAddPlace(){
	$("#map").TqMap("addMouseTip",{evt:event,msg:"请选择地图上的建筑物进行绑定！"});
}
function mouseTipFunAddIssue(){
	$("#map").TqMap("addMouseTip",{evt:event,msg:"请选择地图上的任意地方进行绑定！"});
}

//清除Marker标记
function cleanMapTrace(that){
	clearBoundEvent();
	$("#map").TqMap("deactivateMeasureControl");
	$("#deleteHourse").val("");
	$(".gis_zoom_button").addClass("hidden");//清除图例按钮
	$(".gis_zoom_content").hide();//清除图例内容
	$("#map").TqMap("deleteMarkerByMarkerId",{markerId:"0_hourse"});
	$("#map").TqMap("unregisterEvent",{eventName:"mousemove",func:markerMousemove});
	$("#map").TqMap("unregisterEvent",{eventName:"mousemove",func:mouseTipFunAddPolygon});
	$("#map").TqMap("unregisterEvent",{eventName:"mousemove",func:mouseTipFunAddCircle});
	$("#map").TqMap("unregisterEvent",{eventName:"mousemove",func:mouseTipFunAddRange});
	$("#map").TqMap("unregisterEvent",{eventName:"mousemove",func:mouseTipFunAddHourse});
	$("#map").TqMap("unregisterEvent",{eventName:"mousemove",func:mouseTipFunDelHourse});
	$("#map").TqMap("unregisterEvent",{eventName:"click",func:clickMapAddHourseInfo});
	$("#addHourseInfo").attr("value",false);//用来判断建筑物是否能绑定在wfs要素上
	$("#map").TqMap("deleteMouseTip");
	$("#map").TqMap("removeAllFeatures");
	$("#map").TqMap("deleteAllPopupText");
	$(".PersonalToolsArea li").removeClass("currentPosClick");
	clearGpsMapAllMarker();
}

function clearGpsMapAllMarker(){
	if(typeof gpsIntervalProcess!="undefined"){
		clearInterval(gpsIntervalProcess);
	}
	$("#map").TqMap("deleteMarkerByMarkerId",{ markerId:"playback" });
	$("#map").TqMap("deleteMarkerByMarkerId",{markerId:"locus_point"});
	$("#map").TqMap("deleteMarkerByMarkerId",{markerId:"locus_person"});
	$("#map").TqMap("deleteFeatureByFeatureId",{featureId:"locus_line"});
}

/*---------------------------------待清理--------------------------------------*/
function clearFeaturesAndPopupText(){
	clearFeaturesByMarkerId_objectName("gridLayer");//清除网格层的面
	clearDistributionFeatureAndPopupText();//清除辖区分布的面和popupText
	$("#map").TqMap("deactivateSelectFeature",{sfname: "selectF"});//不激活自定义的Feature图层
	$("#map").TqMap("destroySelectFeature");//销毁自定义的SelectFeature
}

</script>