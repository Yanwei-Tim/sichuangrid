<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="positiveInfoRecord">
	<typeAlias alias="PositiveInfoRecord" type="com.tianque.plugin.taskList.domain.PositiveInfoRecord" />
	<resultMap id="positiveInfoRecordResult" class="PositiveInfoRecord">
	  <result column="id" property="id"/>
	  <result column="orgId" property="organization.id" />
	  <result column="orgCode" property="organization.orgInternalCode" />
	  <result column="recordDate" property="recordDate" />
	  <result column="address" property="address" />
	  <result column="name" property="name" />
	  <result column="livelihoodWay" property="livelihoodWay.id" />
	  <result column="exceptionSituationInfo" property="exceptionSituationInfo" />
	  <result column="familyPhone" property="familyPhone" />
	  <result column="mark" property="mark" />
	  <result column="status" property="status" />
	  <result column="attitude" property="attitude" />
	  <result column="signDate" property="signDate" />
	  <result column="gridMemberPhone" property="gridMemberPhone" />
	  <result column="signMemberName" property="signMemberName" />
	  <result column="createDate" property="createDate" />
	  <result column="createUser" property="createUser" />
	  <result column="updateDate" property="updateDate" />
	  <result column="updateUser" property="updateUser" />  
	</resultMap>
	
	<resultMap id="positiveInfoRecordResultByName" class="PositiveInfoRecord">
	  <result column="address" property="address" />
	  <result column="name" property="name" />
	  <result column="familyPhone" property="familyPhone" />
	</resultMap>
	
	<sql id="sql_where">
		where 1=1
		<dynamic>
			<isNotEqual property="mode" compareValue="gridConfigTask">
				<isNotEmpty  property="orgCode" prepend="and">
					orgCode like #orgCode#||'%' 
				</isNotEmpty>
			</isNotEqual>
			<isEqual property="mode" compareValue="gridConfigTask" prepend=" and ">
				orgCode in (select a.orgInternalCode from gridConfigTask a where 1=1
				<isNotEmpty  property="orgCode" prepend="and">
					orgInternalCode like #orgCode#||'%' 
				</isNotEmpty>
				<isNotNull property="funOrgId" prepend=" and ">
					a.funorgid = #funOrgId#
				</isNotNull>
				)
			</isEqual>
			<isNotEmpty  property="fastSearchCondition" prepend="and">
				(address like #fastSearchCondition# || '%' or name like #fastSearchCondition# || '%')
			</isNotEmpty>
			<isNotEmpty  property="name" prepend="and">
				name like #name# || '%'
			</isNotEmpty>
			<isNotEmpty  property="address" prepend="and">
				address like #address# || '%'
			</isNotEmpty>
			<isNotEmpty  property="signMemberName" prepend="and">
				signMemberName like #signMemberName# || '%'
			</isNotEmpty>
			<isNotEmpty  property="status" prepend="and">
				status = #status#
			</isNotEmpty>
			<isNotEmpty  property="recordStartDate" prepend="and">
				<![CDATA[#recordStartDate# <= recordDate ]]>
			</isNotEmpty>
			<isNotEmpty  property="recordEndDate" prepend="and">
				<![CDATA[#recordEndDate# >= recordDate]]>
			</isNotEmpty>
			<isNotEmpty  property="signEndDate" prepend="and">
				<![CDATA[#signEndDate# >= signDate]]>
			</isNotEmpty>
			<isNotEmpty  property="signStartDate" prepend="and">
				<![CDATA[#signStartDate# <= signDate]]>
			</isNotEmpty>
		</dynamic>
	</sql>
	
	<insert id="addPositiveInfoRecord">
		<selectKey resultClass="java.lang.Long" keyProperty="id">
			<![CDATA[
				SELECT s_positiveInfoRecord.NEXTVAL AS id FROM DUAL
			]]>
		</selectKey>
		<![CDATA[
			insert into positiveInfoRecord
			(id, orgCode,orgId,recordDate,address,name,livelihoodWay,exceptionSituationInfo,familyPhone,mark,gridMemberPhone,createUser,updateUser,createDate,updateDate)
			values(#id#, #organization.orgInternalCode#, #organization.id#, #recordDate#, #address#, #name#, #livelihoodWay.id# , #exceptionSituationInfo#, #familyPhone#, #mark#, #gridMemberPhone#, #createUser#, #updateUser#, #createDate#, #updateDate#)
		]]>
	</insert>
	
	<update id="updatePositiveInfoRecord" parameterClass="PositiveInfoRecord">
		update positiveInfoRecord set
			recordDate=#recordDate#,
			address=#address#,
			name=#name#,
			livelihoodWay=#livelihoodWay.id#,
			exceptionSituationInfo=#exceptionSituationInfo#,
			familyPhone=#familyPhone#,
			mark=#mark#,
			updateUser=#updateUser#,
			updateDate=#updateDate#
		where id=#id#
	</update>
	
	<select id="getPositiveInfoRecordById" parameterClass="java.lang.Long"
		resultMap="positiveInfoRecordResult">
		select id,orgCode,orgId,recordDate,address,name,livelihoodWay,exceptionSituationInfo,familyPhone,mark,signDate,attitude,status,gridMemberPhone,signMemberName,updateUser,updateDate,createDate,createUser
		from positiveInfoRecord where id=#value#
	</select>
	
	<select id="countFindPositiveInfoRecords" parameterClass="java.util.Map"
		resultClass="java.lang.Integer">
		select count(0) from positiveInfoRecord
		<include refid="sql_where" />
	</select>
	
	<select id="findPositiveInfoRecords" parameterClass="java.util.Map"
		resultMap="positiveInfoRecordResult">
		select id,orgCode,orgId,recordDate,address,name,livelihoodWay,exceptionSituationInfo,familyPhone,mark,signDate,attitude,status,gridMemberPhone,signMemberName,updateUser,updateDate,createDate,createUser
		from positiveInfoRecord
		<include refid="sql_where" />
		<dynamic prepend="order by">
			<isPropertyAvailable property="sortField">
				<isNotNull property="sortField">$sortField$</isNotNull>
				<isNotNull property="order">$order$</isNotNull>
			</isPropertyAvailable>
		</dynamic>
	</select>
	
	<select id="findPositiveInfoRecordsByName" parameterClass="java.util.Map"
		resultMap="positiveInfoRecordResultByName">
		select address,name,familyPhone
		from positiveInfoRecord where name like #name#||'%'  
		and orgCode like #orgCode#||'%' group by name,address,familyPhone
	</select>
	
	<delete id="deletePositiveInfoRecord" parameterClass="java.util.Map">
    	delete from positiveInfoRecord where id in
    	<iterate conjunction="," open="(" close=")" property="ids">
            #ids[]#
        </iterate>
    </delete>
</sqlMap>