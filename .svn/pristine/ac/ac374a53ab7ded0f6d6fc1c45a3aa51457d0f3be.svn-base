package com.tianque.baseInfo.primaryOrg.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.tianque.baseInfo.primaryOrg.dao.RedCuffTeamDao;
import com.tianque.baseInfo.primaryOrg.domain.RedCuffTeam;
import com.tianque.core.util.StringUtil;
import com.tianque.core.vo.PageInfo;
import com.tianque.dao.AbstractBaseDao;

@Repository("redCuffTeamDao")
public class RedCuffTeamDaoImpl extends AbstractBaseDao implements RedCuffTeamDao{

	@Override
	public PageInfo<RedCuffTeam> findRedCuffTeamForList(
			RedCuffTeam redCuffTeam, Integer page, Integer rows, String sidx,
			String sord) {
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("sortField", sidx);
		map.put("order", sord);
		map.put("orgCode", redCuffTeam.getOrganization().getOrgInternalCode());
		if(redCuffTeam.getTeamType()!=null && redCuffTeam.getTeamType().getId()!=null){
			map.put("teamType", redCuffTeam.getTeamType().getId());
		}
		if(StringUtil.isStringAvaliable(redCuffTeam.getMemeberName())){
			map.put("memeberName", redCuffTeam.getMemeberName());
		}
		Integer countNum = (Integer) getSqlMapClientTemplate().queryForObject(
				"redCuffTeam.countFindRedCuffTeamForList", map);

		List<RedCuffTeam> list = getSqlMapClientTemplate().queryForList(
				"redCuffTeam.findRedCuffTeamForList", map, (page - 1) * rows, rows);
		PageInfo<RedCuffTeam> pageInfo = new PageInfo<RedCuffTeam>(page, rows,
				countNum, list);
		return pageInfo;
	}

	@Override
	public RedCuffTeam addRedCuffTeam(RedCuffTeam redCuffTeam) {
		Long id = (Long) getSqlMapClientTemplate().insert("redCuffTeam.addRedCuffTeam",redCuffTeam);
		return getRedCuffTeamById(id);
	}

	@Override
	public RedCuffTeam updateRedCuffTeam(RedCuffTeam redCuffTeam) {
		getSqlMapClientTemplate().update("redCuffTeam.updateRedCuffTeam",redCuffTeam);
		return getRedCuffTeamById(redCuffTeam.getId());
	}

	@Override
	public void deleteRedCuffTeamByIds(String[] ids) {
		getSqlMapClientTemplate().delete("redCuffTeam.deleteRedCuffTeamByIds",ids);
	}

	@Override
	public RedCuffTeam getRedCuffTeamById(Long id) {
		return (RedCuffTeam) getSqlMapClientTemplate().queryForObject("redCuffTeam.getRedCuffTeamById",id);
	}

}
