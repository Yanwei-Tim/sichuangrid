package com.tianque.account.api;

import java.util.List;

import com.tianque.core.vo.PageInfo;
import com.tianque.plugin.account.vo.LedgerPoorPeopleVo;
import com.tianque.plugin.account.vo.LedgerSteadyWorkVo;
import com.tianque.plugin.account.vo.SearchComprehensiveVo;
import com.tianque.plugin.account.vo.ThreeRecordsIssueViewObject;

public interface ThreeRecordsComprehensiveDubboService {
	//民生
	PageInfo<ThreeRecordsIssueViewObject> findJurisdictionsNeedDo(
			SearchComprehensiveVo searchVo, List<Long> orgIds,
			Integer page, Integer rows);
	
	PageInfo<ThreeRecordsIssueViewObject> findJurisdictionsNoticeDo(
			SearchComprehensiveVo searchVo, List<Long> orgIds,
			Integer page, Integer rows);
	
	PageInfo<ThreeRecordsIssueViewObject> findJurisdictionsSupportDo(
			SearchComprehensiveVo searchVo, List<Long> orgIds,
			Integer page, Integer rows);
	
	PageInfo<ThreeRecordsIssueViewObject> findJurisdictionsDone(
			SearchComprehensiveVo searchVo, List<Long> orgIds,
			Integer page, Integer rows);
	
	PageInfo<ThreeRecordsIssueViewObject> findJurisdictionsPeriodDone(
			SearchComprehensiveVo searchVo, List<Long> orgIds,
			Integer page, Integer rows);
	
	PageInfo<ThreeRecordsIssueViewObject> findJurisdictionsSubStanceDone(
			SearchComprehensiveVo searchVo, List<Long> orgIds,
			Integer page, Integer rows);
	
	PageInfo<ThreeRecordsIssueViewObject> findJurisdictionsFeedBack(
			SearchComprehensiveVo searchVo,  List<Long> orgIds,
			Integer page, Integer rows);
	
	PageInfo<ThreeRecordsIssueViewObject> findJurisdictionsAssgin(
			SearchComprehensiveVo searchVo, List<Long> orgIds,
			Integer page, Integer rows);

	PageInfo<ThreeRecordsIssueViewObject> findJurisdictionsSubmit(
			SearchComprehensiveVo searchVo, List<Long> orgIds,
			Integer page, Integer rows);
	
	public PageInfo<ThreeRecordsIssueViewObject> findJurisdictionsCreateAndDone(
			SearchComprehensiveVo searchVo, List<Long> orgIds,
			Integer page, Integer rows);
	
	
	//困难
	public PageInfo<LedgerPoorPeopleVo> findJurisdictionsPoorNeedDo(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess, Long sourceType);
	
	public PageInfo<LedgerPoorPeopleVo> findJurisdictionsPoorNoticeDo(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess, Long sourceType);
	
	public PageInfo<LedgerPoorPeopleVo> findJurisdictionsPoorSupportDo(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess, Long sourceType);
	
	public PageInfo<LedgerPoorPeopleVo> findJurisdictionsPoorDone(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess, Long sourceType);
	
	public PageInfo<LedgerPoorPeopleVo> findJurisdictionsPoorFeedBack(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess, Long sourceType);
	
	public PageInfo<LedgerPoorPeopleVo> findJurisdictionsPoorSubStanceDone(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess, Long sourceType);
	
	public PageInfo<LedgerPoorPeopleVo> findJurisdictionsPoorPeriodDone(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess, Long sourceType);
	
	public PageInfo<LedgerPoorPeopleVo> findJurisdictionsPoorAssgin(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess, Long sourceType);
	
	public PageInfo<LedgerPoorPeopleVo> findJurisdictionsPoorSubmit(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess, Long sourceType);
	
	public PageInfo<LedgerPoorPeopleVo> findJurisdictionsPoorCreateAndDone(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess, Long sourceType);
	
	
	//稳定
	public PageInfo<LedgerSteadyWorkVo> findJurisdictionsSteadyWorkNeedDo(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess);
	
	public PageInfo<LedgerSteadyWorkVo> findJurisdictionsSteadyWorkNoticeDo(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess);
	
	public PageInfo<LedgerSteadyWorkVo> findJurisdictionsSteadyWorkSupportDo(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess);
	
	public PageInfo<LedgerSteadyWorkVo> findJurisdictionsSteadyWorkDone(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess);
	
	public PageInfo<LedgerSteadyWorkVo> findJurisdictionsSteadyWorkFeedBack(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess);
	
	public PageInfo<LedgerSteadyWorkVo> findJurisdictionsSteadyWorkSubStanceDone(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess);
	
	public PageInfo<LedgerSteadyWorkVo> findJurisdictionsSteadyWorkPeriodDone(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess);
	
	public PageInfo<LedgerSteadyWorkVo> findJurisdictionsSteadyWorkAssgin(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess);
	
	public PageInfo<LedgerSteadyWorkVo> findJurisdictionsSteadyWorkSubmit(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess);
	
	public PageInfo<LedgerSteadyWorkVo> findJurisdictionsSteadyWorkCreateAndDone(SearchComprehensiveVo searchVo, List<Long> orgIds, Integer page,
			Integer rows, Long functionalorgType, Integer viewProcess);
}
